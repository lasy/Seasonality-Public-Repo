plotlist = list()
for(ca in unique(data$country_area)){
this_df = data %>% filter(country_area == ca)
if(nrow(this_df) > 0){
plotlist[[ca]] = ggplot(this_df,
aes(x = x, y = value, col = age_cat, fill = age_cat)) +
geom_boxplot(alpha = 0.5) +
guides(col = FALSE) +
xlab("")  +
facet_grid(country_area ~ subcat, scales = "free", space = "free") +
theme(strip.text.y = element_text(angle = 0, hjust = 0))
}
}
ggarrange(plotlist = plotlist,
ncol = 1, common.legend = TRUE)
plotlist = list()
for(ca in unique(data$country_area)){
this_df = data %>% filter(country_area == ca)
if(nrow(this_df) > 0){
plotlist[[ca]] =
ggplot(this_df, aes(x = x, y = value, col = age_cat, fill = age_cat)) +
geom_boxplot(alpha = 0.5) +
guides(col = FALSE) +
xlab("")  + ylab("") +
scale_fill_discrete(var_name) +
facet_grid(country_area ~ subcat, scales = "free", space = "free") +
theme(strip.text.y = element_text(angle = 0, hjust = 0))
}
}
ggarrange(plotlist = plotlist, ncol = 1, common.legend = TRUE)
ggarrange(plotlist = plotlist, ncol = 1, common.legend = TRUE)
plotlist = list()
for(ca in unique(data$country_area)){
this_df = data %>% filter(country_area == ca)
if(nrow(this_df) > 0){
plotlist[[ca]] =
ggplot(this_df, aes(x = x, y = value, col = age_cat, fill = age_cat)) +
geom_boxplot(alpha = 0.5) +
guides(col = FALSE) +
xlab("")  + ylab("") +
scale_fill_discrete(var_name) +
facet_grid(country_area ~ subcat, scales = "free", space = "free") +
theme(strip.text.y = element_text(angle = 0, hjust = 0))
}
}
ggarrange(plotlist = plotlist, ncol = 1, common.legend = TRUE)
sex_models_coefficients_df$cat = sex_models_coefficients_df[,var]
data =
sex_models_coefficients_df %>%
filter(category == "Holidays", cat != "all", cat != "all_sex") %>%
group_by(country_area) %>%
mutate(n_cat = lu(cat)) %>%
filter(n_cat >= 2)
plotlist = list()
for(ca in unique(data$country_area)){
this_df = data %>% filter(country_area == ca)
if(nrow(this_df) > 0){
plotlist[[ca]] =
ggplot(this_df, aes(x = x, y = value, col = cat, fill = cat)) +
geom_boxplot(alpha = 0.5) +
guides(col = FALSE) +
xlab("")  + ylab("") +
scale_fill_discrete(var_name) +
facet_grid(country_area ~ subcat, scales = "free", space = "free") +
theme(strip.text.y = element_text(angle = 0, hjust = 0))
}
}
ggarrange(plotlist = plotlist, ncol = 1, common.legend = TRUE)
ggarrange(plotlist = plotlist, ncol = 1, common.legend = TRUE)
ggplot(this_df, aes(x = x, y = value, col = cat, fill = cat)) +
geom_boxplot(alpha = 0.5) +
guides(col = FALSE) +
xlab("")  + ylab("") +
scale_fill_discrete(var_name) +
facet_grid(country_area ~ subcat, scales = "free", space = "free") +
theme(strip.text.y = element_text(angle = 0, hjust = 0))
this_df = data %>% filter(country_area == ca)
ggplot(this_df, aes(x = x, y = value, col = cat, fill = cat)) +
geom_boxplot(alpha = 0.5) +
guides(col = FALSE) +
xlab("")  + ylab("") +
scale_fill_discrete(var_name) +
facet_grid(country_area ~ subcat, scales = "free", space = "free") +
theme(strip.text.y = element_text(angle = 0, hjust = 0))
var_name
var_name = "age group"
ggplot(this_df, aes(x = x, y = value, col = cat, fill = cat)) +
geom_boxplot(alpha = 0.5) +
guides(col = FALSE) +
xlab("")  + ylab("") +
scale_fill_discrete(var_name) +
facet_grid(country_area ~ subcat, scales = "free", space = "free") +
theme(strip.text.y = element_text(angle = 0, hjust = 0))
ggplot(this_df, aes(x = x, y = value, col = cat, fill = cat)) +
geom_boxplot(alpha = 0.5) +
guides(col = FALSE) +
xlab("")  + ylab("") +
scale_fill_discrete(var_name) +
facet_grid(country_area ~ subcat, scales = "free", space = "free") +
theme(strip.text.y = element_text(angle = 0, hjust = 0))
plotlist = list()
for(ca in unique(data$country_area)){
this_df = data %>% filter(country_area == ca)
if(nrow(this_df) > 0){
plotlist[[ca]] =
ggplot(this_df, aes(x = x, y = value, col = cat, fill = cat)) +
geom_boxplot(alpha = 0.5) +
guides(col = FALSE) +
xlab("")  + ylab("") +
scale_fill_discrete(var_name) +
facet_grid(country_area ~ subcat, scales = "free", space = "free") +
theme(strip.text.y = element_text(angle = 0, hjust = 0))
}
}
ggarrange(plotlist = plotlist, ncol = 1, common.legend = TRUE)
compare_model_coef_holidays = function(sex_models_coefficients_df, var = "age_cat", var_name = NULL){
if(is.null(var_name)) var_name = var
sex_models_coefficients_df$cat = sex_models_coefficients_df[,var]
data =
sex_models_coefficients_df %>%
filter(category == "Holidays", cat != "all", cat != "all_sex") %>%
group_by(country_area) %>%
mutate(n_cat = lu(cat)) %>%
filter(n_cat >= 2)
plotlist = list()
for(ca in unique(data$country_area)){
this_df = data %>% filter(country_area == ca)
if(nrow(this_df) > 0){
plotlist[[ca]] =
ggplot(this_df, aes(x = x, y = value, col = cat, fill = cat)) +
geom_boxplot(alpha = 0.5) +
guides(col = FALSE) +
xlab("")  + ylab("") +
scale_fill_discrete(var_name) +
facet_grid(country_area ~ subcat, scales = "free", space = "free") +
theme(strip.text.y = element_text(angle = 0, hjust = 0))
}
}
ggarrange(plotlist = plotlist, ncol = 1, common.legend = TRUE)
}
compare_model_coef_holidays(sex_models_coefficients_df, var = "age cat", var_name = "age group")
compare_model_coef_holidays(sex_models_coefficients_df, var = "age_cat", var_name = "age group")
compare_model_coef_holidays(sex_models_coefficients_df, var = "BC", var_name = "birth control")
compare_model_coef_holidays(sex_models_coefficients_df, var = "sex_type", var_name = "sex type")
?element_rect
source("Scripts/00_functions_birth_param_optim.R")
setwd("~/Documents/Work/Ladies & Gentlemen/Papers/Seasonality/Seasonality-Public-Repo/Code")
setwd("~/Documents/Work/Ladies & Gentlemen/Papers/Seasonality/Seasonality-Public-Repo/Code")
source("Scripts/00_functions_birth_param_optim.R")
official_birth_records = official_birth_records %>%
arrange(country_area, date) %>%
group_by(country_area) %>%
mutate(trend = predict(loess(births ~ year_month, span = 0.6)),
detrended_births = births / trend,
mean_detrended_birth = mean(detrended_births),
centered_detrended_births = detrended_births - mean_detrended_birth)%>%
ungroup()
fourier_transform = official_birth_records %>%
group_by(country_area,year) %>%
mutate(n_months = n()) %>%
filter(n_months == 12) %>%
ungroup() %>%
group_by(country_area) %>%
mutate(ft = fft(centered_detrended_births))
model_B_param_rough_estimates = fourier_transform %>%
group_by(country_area) %>%
mutate(
i = row_number(),
n_tp = n(),
f_index = (n_tp %/% 12) + 1,
amplitude_raw = max(ifelse(i == f_index, abs(ft), 0)),
amplitude = amplitude_raw/n_tp * 2,
angle = max(ifelse(i == f_index, -atan2(Im(ft), Re(ft)), -Inf))  %% (2*pi),
birth_peak = angle / (2*pi),
fertility_peak = (birth_peak + 1/3.5) %% 1)  %>%
ungroup() %>%
select(country_area, amplitude, birth_peak, fertility_peak) %>%  distinct()
source("Scripts/00_functions_optim_each_model.R")
optimize_params_for_each_model = function(location, categories){
cat(location,"\n")
# optimization for model A: needs to be done for each sub-category in that location
cat("\t model A\n")
optimized_params_A =
purrr::map_dfr(
.x = categories$cat[categories$country_area == location],
.f = optimize_params_for_model_A,
categories = categories)
# optimization for model B: only needs to be done once for the location
cat("\t model B\n")
optimized_params_B = optimize_params_for_model_B(location, categories = categories)
# optimization for model C: needs to be done for each sub-category in that location
cat("\t model C\n\t")
optimized_params_C =
purrr::map_dfr(
.x = categories$cat[categories$country_area == location],
.f = optimize_params_for_model_C,
categories = categories,
optimized_params_B = optimized_params_B[1,])
cat("\n\t done\n")
optimized_par_this_loc = bind_rows(optimized_params_A, optimized_params_B, optimized_params_C)
optimized_par_this_loc
}
G_table = read_feather(path = str_c(IO$out_Rdata,"Gestation_par_table.feather"))
categories = clue_sex_agg %>% select(country_area, BC, age_cat, sex_type, cat) %>%  distinct()
if(!file.exists(str_c(IO$out_Rdata,"optimized_fertility_parameters.feather"))){
tic()
opt_par_df = purrr::map_dfr(.x = unique(categories$country_area),
.f = optimize_params_for_each_model, categories = categories)
toc()
write_feather(opt_par_df, path = str_c(IO$out_Rdata,"optimized_fertility_parameters.feather"))
}else{
warning("Fertility parameters were not optimized at this execution.\nLoading values from a previous execution.")
opt_par_df = read_feather(path = str_c(IO$out_Rdata,"optimized_fertility_parameters.feather"))
}
beta_eff = purrr::map_dfr(.x = unique(categories$country_area), .f = function(location){
j = which((sex_models_df$country_area == location) & (sex_models_df$BC == "all") & (sex_models_df$age_cat == "all") & (sex_models_df$sex_type == "unprot_sex"))
this_cat_predicted_sex = predict_daily_sex_behavior(model = sex_models[[j]]$model, date_range = c(as.Date("2000-01-01"),as.Date("2015-12-31")), country_area = location)
beta_C = opt_par_df %>% ungroup() %>%  filter(model == "C", country_area == location, BC == "all", age_cat == "all", sex_type == "unprot_sex") %>% select(beta) %>% unlist()
this_cat_monthly_sex = this_cat_predicted_sex %>%
mutate(
sex_A = sex,
beta_A = max(sex_A - 1),
beta_C = beta_C,
sex_C = 1 + beta_C * (sex_A - 1)/beta_A,
year = year(date)) %>%
group_by(month, year, beta_A, beta_C) %>%
summarize(sex_A = sum(sex_A),
sex_C = sum(sex_C),
n = n(),
sex_A = sex_A/n*30,
sex_C = sex_C/n*30,
.groups = "drop") %>%
filter(n > 20) %>%
arrange(year, month) %>%
mutate(beta_eff_A = (max(sex_A)-mean(sex_A))/mean(sex_A),
beta_eff_C = (max(sex_C)-mean(sex_C))/mean(sex_C),
country_area = location
)
betas = this_cat_monthly_sex %>%
select(country_area, beta_A, beta_C, beta_eff_A, beta_eff_C) %>%
distinct() %>%
pivot_longer(cols = starts_with("beta"), names_to = c(".value","model"), names_pattern =  "(.*)_([AC])")
betas
})
opt_par_df %>% ungroup() %>%  filter(BC == "all", age_cat == "all", sex_type == "unprot_sex") %>%
select(country_area, model, alpha) %>%
left_join(., beta_eff, by = c("country_area", "model")) %>%
mutate(beta = beta %>% replace_na(0),
beta_eff = beta_eff %>% replace_na(0))
opt_par_df = opt_par_df %>%
mutate(country_area_col = dict$country_area$country_area_col[match(country_area, dict$country_area$country_area)])
opt_par_df = opt_par_df %>%
mutate(country_area_wrapped =
country_area %>%
str_replace(.," - ","\n") %>%
factor(., levels = dict$country_area$country_area  %>% str_replace(.," - ","\n")))
births = read_feather(path = str_c(IO$out_Rdata, "simulated_births.feather"))
opt_par_df = opt_par_df %>% mutate(sex_type_short = sex_type %>% str_remove(.,"_sex"))
# first we need to get the number of data point for each time-series
n_tp = births %>%
group_by(country_area, age_cat, BC, sex_type, model) %>%
summarize(n = n(),
sigmasq = var(births), #residuals
.groups = "drop")
opt_par_df = full_join(opt_par_df, n_tp, by = c("country_area", "BC","age_cat", "sex_type", "model"))
opt_par_df = opt_par_df %>%
mutate(n_par = case_when(
model == "A" ~ 0,
model == "B" ~ 2,
model == "C" ~ 3),
lL = n * log(1/sqrt(2*pi*sigmasq)) - 1/(2*sigmasq)*SSR,
AIC = 2*n_par - 2*lL
)
AIC_table = opt_par_df %>%
select(country_area, sex_type, BC, age_cat, model, AIC) %>%
arrange(country_area, sex_type, BC, age_cat, model) %>%
mutate(AIC = round(AIC, 1)) %>%
pivot_wider(id_cols = c(country_area, BC, age_cat),
values_from = AIC,
names_from = c("sex_type","model"))
colnames(AIC_table) = colnames(AIC_table) %>%
str_remove("all_sex_") %>% str_remove("unprot_sex_") %>% str_remove("prot_sex_")
best_models = opt_par_df %>%
arrange(country_area, BC, age_cat, sex_type, AIC) %>%
group_by(country_area, BC, age_cat, sex_type) %>%
top_n(n = 1, wt = desc(AIC)) %>%
rename(best_model = model) %>%
ungroup()
best_models_table = best_models %>%
select(country_area, BC, age_cat , sex_type, best_model) %>%
pivot_wider(names_from = c("BC", "sex_type"), values_from = "best_model", names_prefix = "BC: ", names_sep = " - ")
colnames(best_models_table) = colnames(best_models_table) %>%
str_remove("BC: all") %>% str_remove("BC: F") %>% str_remove("BC: I") %>%
str_remove(" - ")
head(births)
ca = "France"
ggplot(births %>% filter(model == "C", country_area == ca),
aes(x = year_month)) +
geom_line(data = births %>%
filter(model == "C", country_area == ca, BC = "all", age_cat = "all", sex_type = "all_sex"),
aes(y = births)) +
geom_line(aes(y = sim_births, col = sex_type)) +
facet_grid(BC + age_cat ~ .)
ca = "France"
ggplot(births %>% filter(model == "C", country_area == ca),
aes(x = year_month)) +
geom_line(data = births %>%
filter(model == "C", country_area == ca, BC == "all", age_cat == "all", sex_type == "all_sex"),
aes(y = births)) +
geom_line(aes(y = sim_births, col = sex_type)) +
facet_grid(BC + age_cat ~ .)
ca = "Brazil - Central-West"
ggplot(births %>% filter(model == "C", country_area == ca),
aes(x = year_month)) +
geom_line(data = births %>%
filter(model == "C", country_area == ca, BC == "all", age_cat == "all", sex_type == "all_sex"),
aes(y = births)) +
geom_line(aes(y = sim_births, col = sex_type)) +
facet_grid(BC + age_cat ~ .)
ca = "Brazil - Central-West"
ggplot(births %>% filter(model == "C", country_area == ca),
aes(x = year_month)) +
geom_line(aes(y = births)) +
geom_line(aes(y = sim_births, col = sex_type)) +
facet_grid(BC + age_cat ~ .)
ca = "Brazil - Central-West"
ggplot(births %>% filter(model == "C", country_area == ca),
aes(x = year_month)) +
geom_line(aes(y = births)) +
geom_line(aes(y = sim_births, col = sex_type)) +
facet_grid(age_cat ~ .)
ca = "Brazil - Central-West"
ggplot(births %>% filter(model == "C", country_area == ca),
aes(x = year_month)) +
geom_line(aes(y = births)) +
geom_line(aes(y = sim_births, col = sex_type, group = interaction(BC, sex_type))) +
facet_grid(age_cat ~ .)
ca = "Brazil - Central-West"
ggplot(births %>% filter(model == "C", country_area == ca),
aes(x = year_month)) +
geom_line(aes(y = births)) +
geom_line(aes(y = sim_births, col = age_cat, linetype = BC)) +
facet_grid(sex_type ~ .)
ca = "Brazil - Central-West"
ggplot(births %>% filter(model == "C", country_area == ca),
aes(x = year_month)) +
geom_line(aes(y = births)) +
geom_line(aes(y = sim_births, col = age_cat, linetype = BC)) +
facet_grid(sex_type ~ .) +
xlab("time (year)") +
theme(strip.background.y = element_rect(fill = "gray90", col = "transparent"))
ca = "Brazil - Central-West"
ggplot(births %>% filter(model == "C", country_area == ca),
aes(x = year_month)) +
geom_line(aes(y = births)) +
geom_line(aes(y = sim_births, col = age_cat, linetype = BC)) +
facet_grid(sex_type ~ .) +
xlab("time (year)") +
theme(strip.background.y = element_rect(fill = "gray90", color = "transparent"))
ca = "Brazil - Central-West"
ggplot(births %>% filter(model == "C", country_area == ca),
aes(x = year_month)) +
geom_line(aes(y = births)) +
geom_line(aes(y = sim_births, col = age_cat, linetype = BC)) +
facet_grid(sex_type ~ .) +
xlab("time (year)") +
theme(strip.background.y = element_rect(fill = "gray90", color = "transparent")) +
ggtitle(ca)
ca = "Brazil - Northeast"
ggplot(births %>% filter(model == "C", country_area == ca),
aes(x = year_month)) +
geom_line(aes(y = births)) +
geom_line(aes(y = sim_births, col = age_cat, linetype = BC)) +
facet_grid(sex_type ~ .) +
xlab("time (year)") +
theme(strip.background.y = element_rect(fill = "gray90", color = "transparent")) +
ggtitle(ca)
ggplot(births %>% filter(model == "C", country_area == ca),
aes(x = year_month)) +
geom_line(aes(y = births)) +
geom_line(aes(y = sim_births, col = sex_type, linetype = BC)) +
facet_grid(age_cat ~ .) +
xlab("time (year)") +
theme(strip.background.y = element_rect(fill = "gray90", color = "transparent")) +
ggtitle(ca)
ggplot(births %>% filter(model == "C", country_area == ca),
aes(x = year_month)) +
geom_line(aes(y = births)) +
geom_line(aes(y = sim_births, col = sex_type, linetype = BC)) +
facet_grid(age_cat ~ ., labeller = label_both) +
xlab("time (year)") +
theme(strip.background.y = element_rect(fill = "gray90", color = "transparent")) +
ggtitle(ca)
ggplot(births %>% filter(model == "C", country_area == ca, sex_type != "all_sex"),
aes(x = year_month)) +
geom_line(aes(y = births)) +
geom_line(aes(y = sim_births, col = age_cat, linetype = BC)) +
facet_grid(sex_type ~ .) +
xlab("time (year)") +
theme(strip.background.y = element_rect(fill = "gray90", color = "transparent")) +
ggtitle(ca)
ggplot(births %>% filter(model == "C", country_area == ca, sex_type != "all_sex"),
aes(x = year_month)) +
geom_line(aes(y = births)) +
geom_line(aes(y = sim_births, col = sex_type, linetype = BC)) +
facet_grid(age_cat ~ ., labeller = label_both) +
xlab("time (year)") +
theme(strip.background.y = element_rect(fill = "gray90", color = "transparent")) +
ggtitle(ca)
ca = "United States - California"
ggplot(births %>% filter(model == "C", country_area == ca, sex_type != "all_sex"),
aes(x = year_month)) +
geom_line(aes(y = births)) +
geom_line(aes(y = sim_births, col = age_cat, linetype = BC)) +
facet_grid(sex_type ~ .) +
xlab("time (year)") +
theme(strip.background.y = element_rect(fill = "gray90", color = "transparent")) +
ggtitle(ca)
ggplot(births %>% filter(model == "C", country_area == ca, sex_type != "all_sex"),
aes(x = year_month)) +
geom_line(aes(y = births)) +
geom_line(aes(y = sim_births, col = sex_type, linetype = BC)) +
facet_grid(age_cat ~ ., labeller = label_both) +
xlab("time (year)") +
theme(strip.background.y = element_rect(fill = "gray90", color = "transparent")) +
ggtitle(ca)
ca = "United States - Northeast"
ggplot(births %>% filter(model == "C", country_area == ca, sex_type != "all_sex"),
aes(x = year_month)) +
geom_line(aes(y = births)) +
geom_line(aes(y = sim_births, col = age_cat, linetype = BC)) +
facet_grid(sex_type ~ .) +
xlab("time (year)") +
theme(strip.background.y = element_rect(fill = "gray90", color = "transparent")) +
ggtitle(ca)
ggplot(births %>% filter(model == "C", country_area == ca, sex_type != "all_sex"),
aes(x = year_month)) +
geom_line(aes(y = births)) +
geom_line(aes(y = sim_births, col = sex_type, linetype = BC)) +
facet_grid(age_cat ~ ., labeller = label_both) +
xlab("time (year)") +
theme(strip.background.y = element_rect(fill = "gray90", color = "transparent")) +
ggtitle(ca)
for(ca in unique(births$country_area)){
# ggplot(births %>% filter(model == "C", country_area == ca, sex_type != "all_sex"),
#        aes(x = year_month)) +
#   geom_line(aes(y = births)) +
#   geom_line(aes(y = sim_births, col = age_cat, linetype = BC)) +
#   facet_grid(sex_type ~ .) +
#   xlab("time (year)") +
#   theme(strip.background.y = element_rect(fill = "gray90", color = "transparent")) +
#   ggtitle(ca)
g = ggplot(births %>% filter(model == "C", country_area == ca, sex_type != "all_sex"),
aes(x = year_month)) +
geom_line(aes(y = births)) +
geom_line(aes(y = sim_births, col = sex_type, linetype = BC)) +
facet_grid(age_cat ~ ., labeller = label_both) +
xlab("time (year)") +
theme(strip.background.y = element_rect(fill = "gray90", color = "transparent")) +
ggtitle(ca)
print(g)
}
for(ca in unique(births$country_area)){
# ggplot(births %>% filter(model == "C", country_area == ca, sex_type != "all_sex"),
#        aes(x = year_month)) +
#   geom_line(aes(y = births)) +
#   geom_line(aes(y = sim_births, col = age_cat, linetype = BC)) +
#   facet_grid(sex_type ~ .) +
#   xlab("time (year)") +
#   theme(strip.background.y = element_rect(fill = "gray90", color = "transparent")) +
#   ggtitle(ca)
g = ggplot(births %>% filter(model == "C", country_area == ca, sex_type != "all_sex"),
aes(x = year_month)) +
geom_line(aes(y = births)) +
geom_line(aes(y = sim_births, col = sex_type, linetype = BC)) +
facet_grid(age_cat ~ ., labeller = label_both) +
xlab("time (year)") +
theme(strip.background.y = element_rect(fill = "gray90", color = "transparent")) +
ggtitle(ca)
print(g)
}
births
ggplot(births %>% filter(model == "C", country_area == ca),
aes(x = year_month - floor(year_month))) +
geom_line(aes(y = births)) +
geom_line(aes(y = sim_births, col = sex_type, linetype = BC)) +
facet_grid(floor(year_month) ~ age_cat, labeller = label_both) +
xlab("time (year)") +
theme(strip.background.y = element_rect(fill = "gray90", color = "transparent"),
legend.position = "bottom") +
ggtitle(ca)
?labeller
?facet_grid
?label_both
ggplot(births %>% filter(model == "C", country_area == ca),
aes(x = year_month - floor(year_month))) +
geom_line(aes(y = births)) +
geom_line(aes(y = sim_births, col = sex_type, linetype = BC)) +
facet_grid(floor(year_month) ~ age_cat, labeller = label_both) +
xlab("time (year)") +
theme(strip.background.y = element_rect(fill = "gray90", color = "transparent"),
legend.position = "right") +
ggtitle(ca)
ggplot(births %>% filter(model == "C", country_area == ca),
aes(x = year_month - floor(year_month))) +
geom_line(aes(y = births)) +
geom_line(aes(y = sim_births, col = sex_type)) +
facet_grid(floor(year_month) ~ age_cat + BC, labeller = label_context) +
xlab("time (year)") +
theme(strip.background.y = element_rect(fill = "gray90", color = "transparent"),
legend.position = "right") +
ggtitle(ca)
