g_samples = ggplot_imputed_TB(d_subset, facet_grid = NULL)+scale_size(range = c(2,2)) + ggtitle(paste0("r = ",r))
rm(m, cycle_ids_silh, d_subset)
g_silh = ggplot(silh, aes(fill = factor(cluster),x = factor(x, levels =rev(x)), y = sil_width)) + coord_flip()+
geom_bar(stat = "identity")+
geom_point(aes( col = factor(neighbor),y = pmax(0,sil_width) + 0.025), size = 3)+
#ylim(c(-1,1))+
geom_hline(yintercept = clusters_clara$silinfo$avg.width, linetype = 2)+
ggtitle(paste0("avg. silh score = ",round(clusters_clara$silinfo$avg.width,digits = 3)))+
guides(fill = FALSE, color = FALSE)+
xlab("")+ylab("silh width")+ scale_x_discrete(position = "top")
mds_eig = cmdscale(d = clusters_clara$diss, k = 10, eig = TRUE)
mds = data.frame(mds_eig$points)
colnames(mds) = c(paste0("d",1:10))
mds$cluster_num = as.factor(cl_table$cl_num[clusters_clara$clustering[match(rownames(mds), names(clusters_clara$clustering))]])
m = match( silh$rows, rownames(mds))
mds = mds[m,]
mds$num = 1:nrow(mds)
save(mds, file = paste0(IO$out_Rdata, "mds_representative_samples.Rdata"))
save(mds_eig, file = paste0(IO$out_Rdata, "mds_eig.Rdata"))
g_mds = ggplot(mds, aes(x = d1, y = d2, col = cluster_num)) + coord_fixed()+
geom_point(size = 4, alpha = 0.5) +
geom_text(label = 1:nrow(mds))+
guides(color = FALSE)+ggtitle("MDS")+xlab("")+ylab("")
grid.arrange(g_samples, g_silh, g_mds, nrow = 1, widths = c(2,1,2.2))
rm(g_samples, g_silh, g_mds)
rm(mds, m)
# symptom profiles for the clusters
d$tb_binary = (d$tender_breasts==1)*1
agg = aggregate(tb_binary ~ cycleday_m_D + cluster_num, d, sum)
#print(ggplot(agg, aes(x = cycleday_m_D, y = tb_binary, col = factor(cluster_num))) + geom_line() + facet_grid(cluster_num ~.))
agg2 = aggregate(cycle_id_m ~ cluster_num, d, lu)
colnames(agg2)[length(colnames(agg2))] = "n_cycles"
agg  = merge(agg, agg2, all = TRUE)
agg$fraction_of_cycles = agg$tb_binary/agg$n_cycles
# average tracking behavior profiles
agg2 = aggregate(cycle_id_m ~ cycleday_m_D + cluster_num, d[d$tender_breasts>=0,],lu)
colnames(agg2)[length(colnames(agg2))] = "n_cycles_with_logs"
agg  = merge(agg, agg2, all = TRUE)
agg$fraction_of_cycles_with_logs = agg$n_cycles_with_logs/agg$n_cycles
g_symptom_profiles = ggplot(agg, aes(x = cycleday_m_D, y = fraction_of_cycles, col = factor(cluster_num))) + geom_point(size = 0.6) + geom_line()
g_tracking_profiles = ggplot(agg, aes(x = cycleday_m_D, y = fraction_of_cycles_with_logs, col = factor(cluster_num))) + geom_point(size = 0.6) + geom_line() + ylim(c(0,1))
grid.arrange(g_symptom_profiles, g_tracking_profiles)
save(agg, file = paste0(IO$out_Rdata, "breast_tenderness_and_tracking_profiles_per_clusters_clara.Rdata"))
rm(agg, agg2, g_symptom_profiles, g_tracking_profiles)
# and showing the medoids
medoids = as.data.frame(clusters_clara$medoids)
colnames(medoids) = paste0("tender_breasts.",(-18:7)+18)
medoids$cluster_num = cl_table$cl_num[1:n_center]
medoids = reshape(medoids, idvar = "cluster_num", varying = 1:(ncol(medoids)-1), direction = "long")
medoids$cycleday_m_D = medoids$time-18
print(ggplot(medoids, aes(x = cycleday_m_D, y = tender_breasts, col =  factor(cluster_num)))+geom_hline(yintercept = 0, col = "gray") + geom_line(size = 1.5)+ facet_grid(cluster_num ~.))
print(ggplot(medoids, aes(x = cycleday_m_D, y = tender_breasts, col =  factor(cluster_num)))+geom_hline(yintercept = 0, col = "gray") + geom_line(size = 1.5, alpha = 0.5))
# plus showing the number of cycles in each cluster
print(ggplot(data.frame(as.data.frame(clusters_clara$clusinfo),cluster_num = 1:n_center), aes(x = cluster_num, y = size, fill = factor(cluster_num))) + geom_bar(stat = "identity")+ guides(fill = FALSE))
rm(medoids, silh)
print(ggplot(data.frame(as.data.frame(clusters_clara$clusinfo),cluster_num = cl_table$cl_num), aes(x = cluster_num, y = size, fill = factor(cluster_num))) + geom_bar(stat = "identity")+ guides(fill = FALSE))
head(users)
load(paste0(IO$output_data, "cycles.Rdata"))
load(paste0(IO$output_data, "cycles.Rdata"), verbose = TRUE)
cycles_cluster$user_id = d$user_id[match(d$cycle_id_m, d$cycle_id_m)]
cycles_cluster$user_id = d$user_id[match(d$cycle_id_m, cycles_cluster$cycle_id_m)]
length(match(cycles_cluster$cycle_id_m, d$cycle_id_m))
dim(cycles_cluster)
cycles_cluster$user_id = d$user_id[match(cycles_cluster$cycle_id_m, d$cycle_id_m)]
head(cycles)
load(paste0(IO$output_data, "users.Rdata"), verbose = TRUE)
cycles_cluster$age = users$age[match(cycles_cluster$user_id, users$user_id)]
head(cycles_cluster)
head(cycles_cluster$cycle_id_m,200)
head(days)
cycles_cluster$birth_control = cycles$BC[match(cycles_cluster$user_id, cycles$cycle_id)]
cycles_cluster$age_cat = cut(cycles_cluster$age, breaks = breaks$age)
g = ggplot(cycles_cluster, aes(x = age_cat, fill = as.factor(cluster_num)))+
facet_grid( . ~ birth_control)+
geom_bar(position = "fill")
geom_bar(position = "fill")
g
g = ggplot(cycles_cluster, aes(x = age_cat, fill = as.factor(cluster_num)))+
facet_grid( . ~ birth_control)+
geom_bar(position = "fill")
g
head(cycles$BC)
cycles_cluster$user_id = d$user_id[match(cycles_cluster$cycle_id_m, d$cycle_id_m)]
cycles_cluster$age = users$age[match(cycles_cluster$user_id, users$user_id)]
cycles_cluster$birth_control = cycles$BC[match(cycles_cluster$cycle_id_m, cycles$cycle_id)]
cycles_cluster$age_cat = cut(cycles_cluster$age, breaks = breaks$age)
g = ggplot(cycles_cluster, aes(x = age_cat, fill = as.factor(cluster_num)))+
facet_grid( . ~ birth_control)+
geom_bar(position = "fill")
g
load(paste0(IO$output_data, "cycles.Rdata"), verbose = TRUE)
load(paste0(IO$output_data, "users.Rdata"), verbose = TRUE)
head(cycles)
head(users)
days_folder = paste0(IO$output_data,"days/")
days_folder = paste0(IO$output_data,"days/")
filenames = list.files(days_folder)
filename = filenames[1]
filename
cat(filename,"\n")
load(paste0(days_folder, filename), verbose = TRUE)
head(days)
lu(c(1,2,3,NA))
?length
?unique
unique(c(1,1,2,3,NA), incomparables = c(NA))
unique(c(1,1,2,3,NA), incomparables = c(1,2))
unique(c(1,1,2,3,NULL))
lu(c(1,1,2,3,NULL))
lu(c(1,1,2,3,NA))
this_cycles_m = ddply(days[which(!is.na(days$cycleday_m_D))[1:1000],], .(cycle_id_m),
#.parallel=TRUE ,
.fun = summarize,
BC = paste0(sort(unique(BC)), collapse = ","),
n_obs = sum(number * (type == "n_logs"), na.rm = TRUE),
n_days_obs_lut_D_o = lu(cycleday_m_D * (cycleday_m_D %in% c(-par$D : -1))) ,
n_days_obs_lut_D = lu(cycleday_m_D * ifelse(cycleday_m_D %in% c(-par$D : -1),1,NULL)) ,
n_days_obs_lut_7 = lu(cycleday_m_D * ifelse(cycleday_m_D %in% c(-7 : -1),1,NULL)),
n_days_obs_foll_Df = lu(cycleday_m_D * ifelse(cycleday_m_D %in% c(0:par$Df),1,NULL))
)
lu(c(NULL, NULL, NULL))
lu(days$cycleday_m_D * ifelse(days$cycleday_m_D %in% c(-par$D : -1),1,NULL))
par$D
range(days$cycleday_m_D)
range(days$cycleday_m_D, na.rm= TRUE)
head(days)
small_days= days[days$cycle_id_m == "0007dcf523910e7b1e2b66c32405ed3f51cd3dfa_2",]
small_days
small_days= days[which(days$cycle_id_m == "0007dcf523910e7b1e2b66c32405ed3f51cd3dfa_2"),]
small_days
ifelse(small_days$cycleday_m_D %in% c(-par$D : -1),1,NULL)
small_days$cycleday_m_D %in% c(-par$D : -1)
days$cycleday_m_D_lut_D = days$cycleday_m_D
days$cycleday_m_D_lut_D[which(!(days$cycleday_m_D_lut_D %in% c(-par$D : -1))) ] = NULL
head(which(!(days$cycleday_m_D_lut_D %in% c(-par$D : -1))) )
rep(NULL,length(j))
j = which(!(days$cycleday_m_D_lut_D %in% c(-par$D : -1)))
rep(NULL,length(j))
NULL*1
days$cycleday_m_D_lut_D[j] = NULL*1
days$cycleday_m_D_lut_D = days$cycleday_m_D
j = which(!(days$cycleday_m_D_lut_D %in% c(-par$D : -1)))
days$cycleday_m_D_lut_D[j] = NA
this_cycles_m = ddply(days[which(!is.na(days$cycleday_m_D))[1:1000],], .(cycle_id_m),
#.parallel=TRUE ,
.fun = summarize,
BC = paste0(sort(unique(BC)), collapse = ","),
n_obs = sum(number * (type == "n_logs"), na.rm = TRUE),
n_days_obs_lut_D_o = lu(cycleday_m_D * (cycleday_m_D %in% c(-par$D : -1))) ,
n_days_obs_lut_D = lu(cycleday_m_D_lut_D[!is.na(cycleday_m_D_lut_D)])#,
#n_days_obs_lut_7 = lu(cycleday_m_D * ifelse(cycleday_m_D %in% c(-7 : -1),1,NULL)),
#n_days_obs_foll_Df = lu(cycleday_m_D * ifelse(cycleday_m_D %in% c(0:par$Df),1,NULL))
)
return(this_cycles_m)
this_cycles_m
this_cycles_m = ddply(days[which(!is.na(days$cycleday_m_D))[1:1000],], .(cycle_id_m),
#.parallel=TRUE ,
.fun = summarize,
BC = paste0(sort(unique(BC)), collapse = ","),
n_obs = sum(number * (type == "n_logs"), na.rm = TRUE),
n_days_obs_lut_D_o = lu(cycleday_m_D * (cycleday_m_D %in% c(-par$D : -1))) - 1 ,
n_days_obs_lut_D = lu(cycleday_m_D_lut_D[!is.na(cycleday_m_D_lut_D)])#,
#n_days_obs_lut_7 = lu(cycleday_m_D * ifelse(cycleday_m_D %in% c(-7 : -1),1,NULL)),
#n_days_obs_foll_Df = lu(cycleday_m_D * ifelse(cycleday_m_D %in% c(0:par$Df),1,NULL))
)
this_cycles_m
this_cycles_m = ddply(days[which(!is.na(days$cycleday_m_D))[1:1000],], .(cycle_id_m),
#.parallel=TRUE ,
.fun = summarize,
BC = paste0(sort(unique(BC)), collapse = ","),
n_obs = sum(number * (type == "n_logs"), na.rm = TRUE),
n_days_obs_lut_D_o = lu(cycleday_m_D * (cycleday_m_D %in% c(-par$D : -1))) - 1 ,
n_days_obs_lut_D = lu(cycleday_m_D_lut_D[!is.na(cycleday_m_D_lut_D)]),
#n_days_obs_lut_7 = lu(cycleday_m_D * ifelse(cycleday_m_D %in% c(-7 : -1),1,NULL)),
n_days_obs_foll_Df_o = lu(cycleday_m_D * (cycleday_m_D %in% c(0:par$Df))) - 1,
n_days_obs_foll_Df = lu(cycleday_m_D * ifelse(cycleday_m_D %in% c(0:par$Df),1,NULL))
)
days$cycleday_m_D_foll_Df = days$cycleday_m_D
j = which(!(days$cycleday_m_D_foll_Df %in% c(0:par$Df)))
days$cycleday_m_D_foll_Df[j] = NA
head(days)
days$cycleday_m_D_foll_Df = days$cycleday_m_D
j = which(!(days$cycleday_m_D_foll_Df %in% c(0:par$Df)))
days$cycleday_m_D_foll_Df[j] = NA
this_cycles_m = ddply(days[which(!is.na(days$cycleday_m_D))[1:1000],], .(cycle_id_m),
#.parallel=TRUE ,
.fun = summarize,
BC = paste0(sort(unique(BC)), collapse = ","),
n_obs = sum(number * (type == "n_logs"), na.rm = TRUE),
n_days_obs_lut_D_o = lu(cycleday_m_D * (cycleday_m_D %in% c(-par$D : -1))) - 1 ,
n_days_obs_lut_D = lu(cycleday_m_D_lut_D[!is.na(cycleday_m_D_lut_D)]),
#n_days_obs_lut_7 = lu(cycleday_m_D * ifelse(cycleday_m_D %in% c(-7 : -1),1,NULL)),
n_days_obs_foll_Df_o = lu(cycleday_m_D * (cycleday_m_D %in% c(0:par$Df))) - 1,
n_days_obs_foll_Df = lu(cycleday_m_D_foll_Df[!is.na(cycleday_m_D_foll_Df)])
)
this_cycles_m
this_cycles_m = ddply(days[which(!is.na(days$cycleday_m_D))[1:1000],], .(cycle_id_m),
#.parallel=TRUE ,
.fun = summarize,
BC = paste0(sort(unique(BC)), collapse = ","),
n_obs = sum(number * (type == "n_logs"), na.rm = TRUE),
n_days_obs_lut_D_o = lu(cycleday_m_D * (cycleday_m_D %in% c(-par$D : -1))) - 1 ,
n_days_obs_lut_D = lu(cycleday_m_D_lut_D[!is.na(cycleday_m_D_lut_D)]),
#n_days_obs_lut_7 = lu(cycleday_m_D * ifelse(cycleday_m_D %in% c(-7 : -1),1,NULL)),
n_days_obs_foll_Df_o = lu(cycleday_m_D * (cycleday_m_D %in% c(0:par$Df))) - 1,
n_days_obs_foll_Df = lu(cycleday_m_D_foll_Df[!is.na(cycleday_m_D_foll_Df)])
)
this_cycles_m
this_cycles_m = ddply(days[which(!is.na(days$cycleday_m_D))[1:1000],], .(cycle_id_m),
#.parallel=TRUE ,
.fun = summarize,
BC = paste0(sort(unique(BC)), collapse = ","),
n_obs = sum(number * (type == "n_logs"), na.rm = TRUE),
n_days_obs_lut_D_o = lu(cycleday_m_D * (cycleday_m_D %in% c(-par$D : -1))) - 1 ,
n_days_obs_lut_D = lu(cycleday_m_D_lut_D[!is.na(cycleday_m_D_lut_D)]),
#n_days_obs_lut_7 = lu(cycleday_m_D * ifelse(cycleday_m_D %in% c(-7 : -1),1,NULL)),
n_days_obs_foll_Df_o = lu(cycleday_m_D * (cycleday_m_D %in% c(0:(par$Df+1)))) - 1,
n_days_obs_foll_Df = lu(cycleday_m_D_foll_Df[!is.na(cycleday_m_D_foll_Df)])
)
this_cycles_m
this_cycles_m
this_cycles_m = ddply(days[which(!is.na(days$cycleday_m_D))[1:1000],], .(cycle_id_m),
#.parallel=TRUE ,
.fun = summarize,
BC = paste0(sort(unique(BC)), collapse = ","),
n_obs = sum(number * (type == "n_logs"), na.rm = TRUE),
n_days_obs_lut_D_o = lu(cycleday_m_D * (cycleday_m_D %in% c(-par$D : -1))) - 1 ,
n_days_obs_lut_D = lu(cycleday_m_D_lut_D[!is.na(cycleday_m_D_lut_D)]),
#n_days_obs_lut_7 = lu(cycleday_m_D * ifelse(cycleday_m_D %in% c(-7 : -1),1,NULL)),
n_days_obs_foll_Df_o = lu(cycleday_m_D * (cycleday_m_D %in% c(0:(par$Df+1)))) - 1,
n_days_obs_foll_Df = lu(cycleday_m_D_foll_Df[!is.na(cycleday_m_D_foll_Df)])
)
this_cycles_m = ddply(days[which(!is.na(days$cycleday_m_D))[1:1000],], .(cycle_id_m),
#.parallel=TRUE ,
.fun = summarize,
BC = paste0(sort(unique(BC)), collapse = ","),
n_obs = sum(number * (type == "n_logs"), na.rm = TRUE),
n_days_obs_lut_D_o = lu(cycleday_m_D * (cycleday_m_D %in% c(-par$D : -1))) - 1 ,
n_days_obs_lut_D = lu(cycleday_m_D_lut_D[!is.na(cycleday_m_D_lut_D)]),
#n_days_obs_lut_7 = lu(cycleday_m_D * ifelse(cycleday_m_D %in% c(-7 : -1),1,NULL)),
n_days_obs_foll_Df_o = lu(cycleday * (cycleday %in% c(1:(par$Df+1)))) - 1,
n_days_obs_foll_Df = lu(cycleday_m_D_foll_Df[!is.na(cycleday_m_D_foll_Df)])
)
this_cycles_m
this_cycles_m[3:7]
days$cycleday_m_D_lut_7 = days$cycleday_m_D
j = which(!(days$cycleday_m_D_lut_7 %in% c(-7 : -1)))
days$cycleday_m_D_lut_7[j] = NA
this_cycles_m = ddply(days[which(!is.na(days$cycleday_m_D))[1:1000],], .(cycle_id_m),
#.parallel=TRUE ,
.fun = summarize,
BC = paste0(sort(unique(BC)), collapse = ","),
n_obs = sum(number * (type == "n_logs"), na.rm = TRUE),
n_days_obs_lut_D = lu(cycleday_m_D_lut_D[!is.na(cycleday_m_D_lut_D)]),
n_days_obs_lut_7 = lu(cycleday_m_D_lut_7[!is.na(cycleday_m_D_lut_7)]),
n_days_obs_foll_Df = lu(cycleday_m_D_foll_Df[!is.na(cycleday_m_D_foll_Df)])
)
this_cycles_m
cl = makeCluster(par$n_cores)
registerDoParallel(cl)
cycles_m = foreach(filename = filenames, .combine = rbind, .packages = c('plyr','dplyr')) %dopar%
{
cat(filename,"\n")
load(paste0(days_folder, filename), verbose = TRUE)
days$cycleday_m_D_lut_D = days$cycleday_m_D
j = which(!(days$cycleday_m_D_lut_D %in% c(-par$D : -1)))
days$cycleday_m_D_lut_D[j] = NA
days$cycleday_m_D_lut_7 = days$cycleday_m_D
j = which(!(days$cycleday_m_D_lut_7 %in% c(-7 : -1)))
days$cycleday_m_D_lut_7[j] = NA
days$cycleday_m_D_foll_Df = days$cycleday_m_D
j = which(!(days$cycleday_m_D_foll_Df %in% c(0:par$Df)))
days$cycleday_m_D_foll_Df[j] = NA
this_cycles_m = ddply(days[which(!is.na(days$cycleday_m_D))[1:1000],], .(cycle_id_m),
.parallel=TRUE ,
.fun = summarize,
BC = paste0(sort(unique(BC)), collapse = ","),
n_obs = sum(number * (type == "n_logs"), na.rm = TRUE),
n_days_obs_lut_D = lu(cycleday_m_D_lut_D[!is.na(cycleday_m_D_lut_D)]),
n_days_obs_lut_7 = lu(cycleday_m_D_lut_7[!is.na(cycleday_m_D_lut_7)]),
n_days_obs_foll_Df = lu(cycleday_m_D_foll_Df[!is.na(cycleday_m_D_foll_Df)])
)
return(this_cycles_m)
}
dim(cycles_m)
cycles_m = foreach(filename = filenames, .combine = rbind, .packages = c('plyr','dplyr')) %dopar%
{
cat(filename,"\n")
load(paste0(days_folder, filename), verbose = TRUE)
days$cycleday_m_D_lut_D = days$cycleday_m_D
j = which(!(days$cycleday_m_D_lut_D %in% c(-par$D : -1)))
days$cycleday_m_D_lut_D[j] = NA
days$cycleday_m_D_lut_7 = days$cycleday_m_D
j = which(!(days$cycleday_m_D_lut_7 %in% c(-7 : -1)))
days$cycleday_m_D_lut_7[j] = NA
days$cycleday_m_D_foll_Df = days$cycleday_m_D
j = which(!(days$cycleday_m_D_foll_Df %in% c(0:par$Df)))
days$cycleday_m_D_foll_Df[j] = NA
this_cycles_m = ddply(days[which(!is.na(days$cycleday_m_D)),], .(cycle_id_m),
.parallel=TRUE ,
.fun = summarize,
BC = paste0(sort(unique(BC)), collapse = ","),
n_obs = sum(number * (type == "n_logs"), na.rm = TRUE),
n_days_obs_lut_D = lu(cycleday_m_D_lut_D[!is.na(cycleday_m_D_lut_D)]),
n_days_obs_lut_7 = lu(cycleday_m_D_lut_7[!is.na(cycleday_m_D_lut_7)]),
n_days_obs_foll_Df = lu(cycleday_m_D_foll_Df[!is.na(cycleday_m_D_foll_Df)])
)
return(this_cycles_m)
}
stopImplicitCluster()
stopImplicitCluster()
days_folder = paste0(IO$output_data,"days/")
filenames = list.files(days_folder)
cl = makeCluster(par$n_cores)
registerDoParallel(cl)
cycles_m = foreach(filename = filenames, .combine = rbind, .packages = c('plyr','dplyr')) %dopar%
{
cat(filename,"\n")
load(paste0(days_folder, filename), verbose = TRUE)
days$cycleday_m_D_lut_D = days$cycleday_m_D
j = which(!(days$cycleday_m_D_lut_D %in% c(-par$D : -1)))
days$cycleday_m_D_lut_D[j] = NA
days$cycleday_m_D_lut_7 = days$cycleday_m_D
j = which(!(days$cycleday_m_D_lut_7 %in% c(-7 : -1)))
days$cycleday_m_D_lut_7[j] = NA
days$cycleday_m_D_foll_Df = days$cycleday_m_D
j = which(!(days$cycleday_m_D_foll_Df %in% c(0:par$Df)))
days$cycleday_m_D_foll_Df[j] = NA
this_cycles_m = ddply(days[which(!is.na(days$cycleday_m_D))[1:1000],], .(cycle_id_m),
.parallel=TRUE ,
.fun = summarize,
BC = paste0(unique(BC), collapse = ","),
n_obs = sum(number * (type == "n_logs"), na.rm = TRUE),
n_days_obs_lut_D = lu(cycleday_m_D_lut_D[!is.na(cycleday_m_D_lut_D)]),
n_days_obs_lut_7 = lu(cycleday_m_D_lut_7[!is.na(cycleday_m_D_lut_7)]),
n_days_obs_foll_Df = lu(cycleday_m_D_foll_Df[!is.na(cycleday_m_D_foll_Df)])
)
return(this_cycles_m)
}
stopImplicitCluster()
head(cycles_m)
dim(cycles_m)
unique(cycles_m$BC)
par$cycles_m = list()
par$cycles_m$BC_dict = data.frame(
value = c("none / condoms","pill","none / condoms,pill","pill,none / condoms"),
new_value = c("none / condoms","pill","on-pill","off-pill"))
cycles_m$birth_control = par$cycles_m$BC_dict$new_value[match(cycles_m$BC, par$cycles_m$BC_dict$value)]
unique(cycles_m$birth_control)
cycles_m$user_id = cycles$user_id[match(cycles_m$cycle_id_m, cycles$cycle_id)]
head(cycles_m)
head(users)
m = match(cycles_m$cycle_id_m, cycles$cycle_id)
cycles_m$user_id = cycles$user_id[m]
m = match(cycles_m$user_id, users$user_id)
cycles_m$age = users$age[m]
cycles_m$country = users$country[m]
cycles_m$height = users$height[m]
cycles_m$weight = users$weight[m]
head(cycles_m)
head(users)
load(paste0(IO$output_data, "cycles_m.Rdata"), verbose = TRUE)
save(cycles_m, file = paste0(IO$output_data, "cycles_m.Rdata"))
load(paste0(IO$output_data, "cycles_m.Rdata"), verbose = TRUE)
?file.copy
load(paste0(IO$output_data, "cycles_m.Rdata"), verbose = TRUE)
dim(cycles_m)
head(cycles_m)
dim(d_wide)
load(file = paste0(IO$tmp_Rdata,"silhouette_score_summary.Rdata"), verbose = TRUE)
df$n_clusters = factor(df$n_clust)
ggplot(df, aes(x = n_clusters, y = avg_silhouette_score, fill = avg_silhouette_score)) + geom_bar(stat = "identity")+ facet_grid(r ~ .)
unique(cycles_m$BC)
table(cycles_m$BC)
source("Scripts/00_setup.R")
knitr::opts_chunk$set(echo = TRUE, cache = TRUE)
options(scipen=999)
load(paste0(IO$output_data, "cycles_m.Rdata"), verbose = TRUE)
head(cycles_m)
load(paste0(IO$output_data, "cycles_m.Rdata"), verbose = TRUE)
head(cycles_m)
load(paste0(IO$output_data, "users.Rdata"), verbose = TRUE)
head(users)
head(cycles_m)
g = ggplot(cycles_m, aes(x = n_days_obs_lut_D)) + geom_density()
g
g = ggplot(cycles_m, aes(x = n_days_obs_lut_D)) + geom_histogram()
g
g = ggplot(cycles_m, aes(x = n_days_obs_lut_D)) + geom_histogram(binwidth = 1)
g
g = ggplot(cycles_m, aes(alpha = 0.3)) +
geom_histogram(aes(x = n_days_obs_lut_D),binwidth = 1, col = "goldenrod1")+
geom_histogram(aes(x = n_days_obs_lut_7),binwidth = 1, col = "tomato1")+
geom_histogram(aes(x = n_days_obs_foll_Df),binwidth = 1, col = "slateblue1")
g
g = ggplot(cycles_m, aes(alpha = 0.3)) +
geom_histogram(aes(x = n_days_obs_lut_D),binwidth = 1, fill = "goldenrod1")+
geom_histogram(aes(x = n_days_obs_lut_7),binwidth = 1, fill = "tomato1")+
geom_histogram(aes(x = n_days_obs_foll_Df),binwidth = 1, fill = "slateblue1")
g
g = ggplot(cycles_m, aes(x = n_days_obs_lut_D, y = n_days_obs_foll_Df, col = n_days_obs_lut_7)) + geom_point(alpha = 0.1)
g
g = ggplot(cycles_m, aes(x = n_days_obs_lut_D, y = n_days_obs_foll_Df, col = n_days_obs_lut_7)) + geom_point(alpha = 0.001)
g
g
g = ggplot(cycles_m, aes(x = n_days_obs_lut_D, y = n_days_obs_foll_Df, col = n_days_obs_lut_7)) +
geom_point(alpha = 0.005)
g
g
g = ggplot(cycles_m, aes(x = n_days_obs_lut_D, y = n_days_obs_foll_Df, col = n_days_obs_lut_7)) +
geom_density_2d()
g
g
g = ggplot(cycles_m, aes(alpha = 0.3)) +
geom_histogram(aes(x = n_days_obs_lut_D),binwidth = 1, fill = "goldenrod1")+
geom_histogram(aes(x = n_days_obs_lut_7),binwidth = 1, fill = "tomato1")+
geom_histogram(aes(x = n_days_obs_foll_Df),binwidth = 1, fill = "slateblue1")
g
g = ggplot(cycles_m[cycles_m$n_days_obs_lut_D>=10,], aes(alpha = 0.3)) +
geom_histogram(aes(x = n_days_obs_foll_Df),binwidth = 1, fill = "slateblue1")
g
cycles_m$cluster_num[is.na(cycles_m$cluster_num)] = ifelse(cycles_m$n_days_obs_lut_D>=10,-2,
ifelse(cycles_m$n_days_obs_lut_7>=4,-1,0))
no_TB = which(is.na(cycles_m$cluster_num))
cycles_m$cluster_num[no_TB] = ifelse(cycles_m$n_days_obs_lut_D[no_TB]>=10,-2,
ifelse(cycles_m$n_days_obs_lut_7[no_TB]>=4,-1,0))
head(cycles_m)
cycles_m$cluster[no_TB] = c("regular tracking","pre-menstrual tracking","menstrual tracking")[cycles_m$cluster_num[no_TB]+3]
head(cycles_m)
cycles_m$cluster_num[no_TB]+3
no_TB = which(is.na(cycles_m$cluster_num))
head(no_TB)
load(paste0(IO$output_data, "cycles_m.Rdata"), verbose = TRUE)
no_TB = which(is.na(cycles_m$cluster_num))
cycles_m$cluster_num[no_TB] = ifelse(cycles_m$n_days_obs_lut_D[no_TB]>=10,-2,
ifelse(cycles_m$n_days_obs_lut_7[no_TB]>=4,-1,0))
cycles_m$cluster[no_TB] = c("regular tracking","pre-menstrual tracking","menstrual tracking")[cycles_m$cluster_num[no_TB]+3]
cycles_m$cluster = as.character(cycles_m$cluster)
cycles_m$cluster[no_TB] = c("regular tracking","pre-menstrual tracking","menstrual tracking")[cycles_m$cluster_num[no_TB]+3]
head(cycles_m)
table(cycles_m$cluster)
cycles_m$cluster_num_f = factor(cycles_m$cluster_num, levels = sort(unique(cycles_m$cluster_num)))
# most prevalent cluster for each user
agg = aggregate( cluster_num_f ~ user_id, cycles_m, function(x) (which.max(table(x))+min(cycles_m$cluster_num)-1) )
colnames(agg) = c("user_id","most_preval_clust")
head(agg)
table(agg$most_preval_clust)
users = merge(users, agg, all.x = TRUE)
br = (min(cycles_m$cluster_num, na.rm = TRUE)-0.5):(max(cycles_m$cluster_num, na.rm = TRUE)+0.5)
br
agg = aggregate( cluster_num ~ user_id, cycles_m, function(x){hist(x, breaks = br, plot = FALSE)$counts} )
agg2 = cbind(data.frame(user_id = agg$user_id), as.data.frame(agg$cluster_num))
head(agg2)
no_TB_cluster_names =  c("regular tracking","pre-menstrual tracking","menstrual tracking")
colnames(agg2) = c("user_id",paste0("n_cl_",c(no_TB_cluster_names,1:max(cycles_m$cluster_num))))
head(agg2)
colnames(agg2) = c("user_id",paste0("n_",c(no_TB_cluster_names,paste0("cl_",1:max(cycles_m$cluster_num)))))
head(agg2)
users = merge(users, agg2, all.x = TRUE)
j = grep("n_cl_",colnames(users))
j
users$n_cycles_with_TB = apply(users[,j],1,sum)
users$perc_cycles_with_TB = users$n_cycles_with_TB / users$n_cycles
head(users)
agg = aggregate(cycle_id_m ~ user_id, cycles_m, lu)
agg = aggregate(cycle_id_m ~ user_id, cycles_m[1:100,], lu)
agg
dim(agg)
agg = aggregate(cycle_id_m ~ user_id, cycles_m[1:1000,], lu)
cycles_m$cycle_id_m = as.character(cycles_m$cycle_id_m)
agg = aggregate(cycle_id_m ~ user_id, cycles_m, lu)
head(agg)
colnames(agg) = c("user_id","n_cycles_m")
dim(agg)
users = merge(users, agg, all.x = TRUE)
users$perc_cycles_with_TB = users$n_cycles_with_TB / users$n_cycles_m
head(users)
agg = aggregate( cluster_num_f ~ user_id, cycles_m, lu )
colnames(agg) = c("user_id","n_clust")
hist(agg$n_clust)
users = merge(users, agg, all.x = TRUE)
source("Scripts/00_functions_distance.R.R")
save(users, file = paste0(IO$output_data, "users.Rdata"))
file.copy(from = paste0(IO$output_data, "users.Rdata"), to = paste0(IO$tmp_data, "users_with_clusters_info.Rdata"))
output_folder = paste0(IO$tmp_data,"avg_dist_per_user/")
dir.create(output_folder)
input_folder = paste0(IO$output_data,"days/")
days_files = list.files(input_folder)
days_files
N = length(days_files)
output_file = paste0(output_folder, "d_",n,".Rdata")
n = 1
output_file = paste0(output_folder, "d_",n,".Rdata")
output_file
load(paste0(input_folder,days_files[n]), verbose = TRUE)
user_ids = unique(days$user_id[days$type == "tender_breasts"])
user_ids
days = days[days$user_id %in% user_ids,]
d = reshape_and_impute(days)
save(d, file = output_file)
source("Scripts/00_functions_distance.R")
output_file = paste0(output_folder,"users_with_avg_distance_",n,".Rdata")
output_file
load(file = paste0(output_folder, "d_",n,".Rdata"), verbose = TRUE)
# compute average distance
users_with_avg_distance = foreach(u = unique(d$user_id), .combine = rbind) %do% {
dist_summary = compute_average_distance(d = d[d$user_id == u,])
}
head(users_with_avg_distance)
n = 1
load(file = paste0(output_folder, "d_",n,".Rdata"))
avg_dist_per_user[which(avg_dist_per_user$user_id %in% unique(d$user_id)),]
