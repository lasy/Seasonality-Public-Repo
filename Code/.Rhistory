sig.test = 1) # we want to run a significance test
plot(current.wt)
plot(current.wt)
current.wt = wt(timeserie_matrix,
dt = 1/365.333, dj = 15/365.333,
lag1 = 0.7, # pink noise
sig.test = 1) # we want to run a significance test
quartz()
plot(current.wt)
source('~/Google Drive/Ladies & Gentlemen/Papers/Seasonality/Seasonality-Public-Repo/Code/Scripts/00_variables.R')
year(par$end_date) - year(par$start_date)
source('~/Google Drive/Ladies & Gentlemen/Papers/Seasonality/Seasonality-Public-Repo/Code/Scripts/00_variables.R')
par$n_years = year(par$end_date) - year(par$start_date) + 1
source('~/Google Drive/Ladies & Gentlemen/Papers/Seasonality/Seasonality-Public-Repo/Code/Scripts/00_variables.R')
source('~/Google Drive/Ladies & Gentlemen/Papers/Seasonality/Seasonality-Public-Repo/Code/Scripts/00_variables.R')
source('~/Google Drive/Ladies & Gentlemen/Papers/Seasonality/Seasonality-Public-Repo/Code/Scripts/00_variables.R')
par$dt = par$n_years / length(par$date_seq)
source('~/Google Drive/Ladies & Gentlemen/Papers/Seasonality/Seasonality-Public-Repo/Code/Scripts/00_variables.R')
source('~/Google Drive/Ladies & Gentlemen/Papers/Seasonality/Seasonality-Public-Repo/Code/Scripts/00_variables.R')
head(match(indiv_indicators$date, par$date_seq))
tail(match(indiv_indicators$date, par$date_seq))
indiv_indicators$time_num = par$time_num[match(indiv_indicators$date, par$date_seq)]
indiv_indicators[1000:1100,]
save(indiv_indicators, file = paste0(IO$output_clue, "indiv_indicators.Rdata"  ))
source('~/Google Drive/Ladies & Gentlemen/Papers/Seasonality/Seasonality-Public-Repo/Code/Scripts/00_variables.R')
par$agg_col
IO$public_birth_records = paste0(IO$public_output_data,"public_birth_records/")
IO$public_birth_records
load(paste0(IO$output_clue,"indiv_indicators.Rdata"))
par$agg_col
agg = ddply(indiv_indicators, .variable = c("date",par$agg_col),
.fun = summarize,
daily_fertility_sum = sum(daily_fertility),
n_users = sum(active_use),
)
ggplot(agg, aes(x = date, y = daily_fertility_sum, col = age_cat, linetype = bmi_cat))  + geom_line() + facet_grid(country ~., scale = "free_y")
agg = ddply(indiv_indicators, .variable = c("date",par$agg_col),
.fun = summarize,
n_users = sum(active_use)
)
head(agg)
head(agg, 100)
agg$tim
agg$time_n
agg$time_num = par$time_num[match(agg$date, par$date_seq)]
head(agg)
agg = agg[,c(1,6,2,3,4,5)]
head(agg)
pop_indicators = agg
head(order(pop_indicators$country,
pop_indicators$age_cat,
pop_indicators$bmi_cat,
pop_indicators$time_num))
head(pop_indicators[order(pop_indicators$country,
pop_indicators$age_cat,
pop_indicators$bmi_cat,
pop_indicators$time_num),])
pop_indicators = pop_indicators[order(pop_indicators$country,
pop_indicators$age_cat,
pop_indicators$bmi_cat,
pop_indicators$time_num),]
dim(pop_indicators)
agg = ddply(indiv_indicators,
.variable = c("date",par$agg_col),
.fun = summarize,
daily_fertility_sum = sum(daily_fertility))
head(agg)
dim(agg)
dim(pop_indicators)
ggplot(agg, aes(x = date, y = daily_fertility_sum, col = age_cat, linetype = bmi_cat))  + geom_line() + facet_grid(country ~., scale = "free_y")
head(merge(pop_indicators, agg, all.x = TRUE))
head(pop_indicators)
pop_indicators$o = 1:nrow(pop_indicators)
head(pop_indicators)
head( merge(pop_indicators, agg, all.x = TRUE))
?merge
pop_indicators = merge(pop_indicators, agg, all.x = TRUE)
pop_indicators = pop_indicators[order(pop_indicators$o),]
pop_indicators$daily_fertility = pop_indicators$daily_fertility_sum / pop_indicators$n_users
ggplot(pop_indicators, aes(x = date, y = daily_fertility, col = age_cat, linetype = bmi_cat))  + geom_line() + facet_grid(country ~., scale = "free_y")
head(par$agg_col)
head(pop_indicators[,par$agg_col])
agg_col_combinations = unique(pop_indicators[,par$agg_col])
dim(agg_col_combinations)
head(agg_col_combinations)
cond = rep(nrow(pop_indicators), TRUE)
agg_col = "country"
paste0("cond = cond & (pop_indicators$",agg_col," == agg_col_combinations$",agg_col,"[i]")
i = 1
cond = rep(nrow(pop_indicators), TRUE)
for(agg_col in par$agg_col){
eval(parse(text = paste0("cond = cond & (pop_indicators$",agg_col," == agg_col_combinations$",agg_col,"[i])")))
}
sum(cond)
sum(cond, na.rm =  TRUE)
i_cond = which(cond)
length(i_cond)>0
this_pop_indicators = pop_indicators[which(cond),]
head(this_pop_indicators)
pop_indicators$daily_fertility = pop_indicators$daily_fertility_sum / pop_indicators$n_users * (pop_indicators$n_users>0)
this_pop_indicators = pop_indicators[which(cond),]
head(this_pop_indicators)
pop_indicators$daily_fertility = (pop_indicators$n_users>0) * pop_indicators$daily_fertility_sum / pop_indicators$n_users
this_pop_indicators = pop_indicators[which(cond),]
pop_indicators$daily_fertility = (pop_indicators$n_users>0) * pop_indicators$daily_fertility_sum / pop_indicators$n_users
this_pop_indicators = pop_indicators[which(cond),]
head(this_pop_indicators)
pop_indicators$daily_fertility = pop_indicators$daily_fertility_sum / pop_indicators$n_users
this_pop_indicators = pop_indicators[which(cond),]
timeserie_matrix = as.matrix(this_pop_indicators[,c("time_num","daily_fertility")])
head(timeserie_matrix)
head(timeserie_matrix, 20)
current.wt = wt(timeserie_matrix,
dt = par$dt, dj = 15*par$dt,
lag1 = 0.7, # pink noise
sig.test = 1) # we want to run a significance test
plot(current.wt)
plot(current.wt)
head(timeserie_matrix)
is.na(timeserie_matrix[1:10,2])
dim(timeserie_matrix)
timeserie_matrix = timeserie_matrix[!is.na(timeserie_matrix[,2]),]
dim(timeserie_matrix)
current.wt = wt(timeserie_matrix,
dt = par$dt, dj = 15*par$dt,
lag1 = 0.7, # pink noise
sig.test = 1) # we want to run a significance test
plot(current.wt)
1/13
user
this_user_indiv_indicators = indiv_indicators[indiv_indicators$user_id == user,]
this_user_indiv_indicators = this_user_indiv_indicators[order(this_user_indiv_indicators$time_num),]
timeserie_matrix = as.matrix(this_user_indiv_indicators[,c("time_num","daily_fertility")])
current.wt = wt(timeserie_matrix,
dt = par$dt, dj = 15*par$dt,
lag1 = 0.7, # pink noise
sig.test = 1) # we want to run a significance test
plot(current.wt, main = user)
this_pop_indicators = pop_indicators[which(cond),]
timeserie_matrix = as.matrix(this_pop_indicators[,c("time_num","daily_fertility")])
timeserie_matrix = timeserie_matrix[!is.na(timeserie_matrix[,2]),]
current.wt = wt(timeserie_matrix,
dt = par$dt, dj = 15*par$dt,
lag1 = 0.7, # pink noise
sig.test = 1) # we want to run a significance test
plot(current.wt, main = paste0(agg_col_combinations[i,], collapse = "|"))
agg_col_combinations
plot(current.wt, main = paste0(as.character(agg_col_combinations[i,]), collapse = "|"))
as.character(agg_col_combinations[i,])
agg_col_combinations
i
agg_col_combinations[i,]
as.character(agg_col_combinations[i,])
agg_col_combinations = unique(as.character(pop_indicators[,par$agg_col]))
agg_col_combinations = unique(pop_indicators[,par$agg_col])
for(i in 1:ncol(agg_col_combinations)){
agg_col_combinations[,i] = as.character(agg_col_combinations[,i])
}
cond = rep(nrow(pop_indicators), TRUE)
for(agg_col in par$agg_col){
eval(parse(text = paste0("cond = cond & (pop_indicators$",agg_col," == agg_col_combinations$",agg_col,"[i])")))
}
i_cond = which(cond)
this_pop_indicators = pop_indicators[which(cond),]
timeserie_matrix = as.matrix(this_pop_indicators[,c("time_num","daily_fertility")])
timeserie_matrix = timeserie_matrix[!is.na(timeserie_matrix[,2]),]
current.wt = wt(timeserie_matrix,
dt = par$dt, dj = 15*par$dt,
lag1 = 0.7, # pink noise
sig.test = 1) # we want to run a significance test
this_pop_indicators = pop_indicators[which(cond),]
this_pop_indicators = pop_indicators[i_cond,]
this_pop_indicators
this_pop_indicators
i
i = 1
cond = rep(nrow(pop_indicators), TRUE)
for(agg_col in par$agg_col){
eval(parse(text = paste0("cond = cond & (pop_indicators$",agg_col," == agg_col_combinations$",agg_col,"[i])")))
}
i_cond = which(cond)
length(i_cond)>0
this_pop_indicators = pop_indicators[i_cond,]
timeserie_matrix = as.matrix(this_pop_indicators[,c("time_num","daily_fertility")])
timeserie_matrix = timeserie_matrix[!is.na(timeserie_matrix[,2]),]
current.wt = wt(timeserie_matrix,
dt = par$dt, dj = 15*par$dt,
lag1 = 0.7, # pink noise
sig.test = 1) # we want to run a significance test
plot(current.wt, main = paste0(agg_col_combinations[i,], collapse = "|"))
plot(current.wt, main = paste0(agg_col_combinations[i,], collapse = " | "))
save(pop_indicators, file = paste0(IO$output_clue,"pop_indicators.Rdata"))
file.copy(from = paste0(IO$output_clue,"pop_indicators.Rdata"), to = paste0(IO$tmp_clue,"pop_indicators_empty.Rdata"), overwrite = TRUE)
save(pop_indicators, file = paste0(IO$output_clue,"pop_indicators.Rdata"))
file.copy(from = paste0(IO$output_clue,"pop_indicators.Rdata"), to = paste0(IO$tmp_clue,"pop_indicators_with_fertility.Rdata"), overwrite = TRUE)
load(paste0(IO$output_clue,"pop_indicators.Rdata"))
load(paste0(IO$output_clue,"pop_indicators.Rdata"), verbose =  TRUE)
feature_dict
mucus_types = c("creamy","egg_white","sticky")
tracking_mucus = tracking[tracking$type %in% mucus_types,]
mucus_types = c("creamy","egg_white","sticky")
tracking_mucus = tracking[tracking$type %in% mucus_types,]
indiv_indicators$mucus = tracking_mucus$type[match(indiv_indicators$day_id, tracking_mucus$day_id)]
head(indiv_indicators)
rm(tracking_mucus)
indiv_indicators$mucus_num = as.numeric(factor(indiv_indicators$mucus, levels = mucus_types))
unique(indiv_indicators$mucus_num)
indiv_indicators$mucus_num[is.na(indiv_indicators$mucus_num)] = 0
agg = ddply(indiv_indicators,
.c("cycle_id"),
n_eggwhite = sum(mucus == "egg_white"),
mucus_quality = max(mucus)
)
agg = ddply(indiv_indicators,
.(cycle_id),
n_eggwhite = sum(mucus == "egg_white"),
mucus_quality = max(mucus)
)
head(agg)
agg = ddply(indiv_indicators,
.(cycle_id),
.fun = summarize,
n_eggwhite = sum(mucus == "egg_white"),
mucus_quality = max(mucus)
)
head(agg)
agg = ddply(indiv_indicators,
.(cycle_id),
.fun = summarize,
n_eggwhite = sum(mucus == "egg_white", na.rm = TRUE),
mucus_quality = max(mucus, na.rm = TRUE)
)
head(agg)
agg = ddply(indiv_indicators,
.(cycle_id),
.fun = summarize,
n_eggwhite = sum(mucus == "egg_white", na.rm = TRUE),
mucus_quality = max(mucus_num, na.rm = TRUE)
)
head(agg)
hist(agg$mucus_quality)
hist(agg$n_eggwhite)
hist(agg$n_eggwhite, breaks = 1000)
hist(agg$n_eggwhite, breaks = 1000, xlim = c(0,20))
dim(agg)
agg = ddply(indiv_indicators,
.(cycle_id),
.fun = summarize,
n_eggwhite = sum(mucus == "egg_white", na.rm = TRUE),
mucus_quality = max(mucus_num, na.rm = TRUE),
n_bleeding_after_day_5 = sum((bleeding >=3) & (cycleday >5), na.rm = TRUE)
)
head(agg)
table(agg$n_bleeding_after_day_5)
agg = ddply(indiv_indicators,
.(cycle_id),
.fun = summarize,
n_eggwhite = sum(mucus == "egg_white", na.rm = TRUE),
mucus_quality = max(mucus_num, na.rm = TRUE),
n_bleeding_after_day_5 = sum((bleeding >=3) & (cycleday >5), na.rm = TRUE),
n_heavy_bleeding = sum(bleeding ==4,na.rm = TRUE)
)
head(cycles)
dim(cycles)
dim(agg)
unique(diff(order(cycles$user_id, cycles$cycle_nb)))
cycles = cycles[order(cycles$user_id, cycles$cycle_nb),]
head(cycles[,grep("cycle_id",colnames(cycles))])
cycles = cycles[order(cycles$user_id, cycles$cycle_nb),]
cycles$cycle_id_next = paste0(cycles$user_id, "_", cycles$cycle_nb+1)
cycles$cycle_id_next2 = paste0(cycles$user_id, "_", cycles$cycle_nb+2)
head(cycles[,grep("cycle_id",colnames(cycles))])
cycles$cycle_length_next = cycles$cycle_length[match(cycles$cycle_id_next, cycles$cycle_id)]
cycles$cycle_length_next2 = cycles$cycle_length[match(cycles$cycle_id_next2, cycles$cycle_id)]
head(cycles[,grep("cycle_length",colnames(cycles))])
head(cycles[,grep("cycle_length",colnames(cycles))], 20)
head(cycles)
colnames(cycles)
head(cycles[,c(1,6,4,9,10)])
head(cycles[,c(1,6,4,9,10)], 20)
head(cycles[,c(1,6,4,9,10)], 50)
cycles$sd_cycle_length = apply(cycles[,grep("cycle_length",colnames(cycles))], 1, sd, na.rm = TRUE)
head(cycles$sd_cycle_length)
head(cycles$sd_cycle_length, 100)
replace_NAs_with_latest_value = function(x) {   # repeats the last non NA value. Keeps leading NA
ind = which(!is.na(x))      # get positions of nonmissing values
if(is.na(x[1]))             # if it begins with a missing, add the
ind = c(1,ind)            # first position to the indices
rep(x[ind], times = diff(   # repeat the values at these indices
c(ind, length(x) + 1) ))  # diffing the indices + length yields how often
}                               # they need to be repeated
# copied from: https://stackoverflow.com/questions/7735647/replacing-nas-with-latest-non-na-value
head(cycles$sd_cycle_length , 100)
cycles$sd_cycle_length = replace_NAs_with_latest_value(cycles$sd_cycle_length)
head(cycles$sd_cycle_length , 100)
head(agg)
head(indiv_indicators)
dim(merge(indiv_indicators, agg, by = "cycle_id", all.x = TRUE)
)
dim(indiv_indicators)
head(merge(indiv_indicators, agg, by = "cycle_id", all.x = TRUE)
)
indiv_indicators = indiv_indicators[order(indiv_indicators$o),]
indiv_indicators$sd_cycle_length = cycles$sd_cycle_length[match(indiv_indicators$cycle_id, cycles$cycle_id)]
colnames(indiv_indicators)
indiv_indicators = merge(indiv_indicators, agg, by = "cycle_id", all.x = TRUE)
indiv_indicators = indiv_indicators[order(indiv_indicators$o),]
colnames(indiv_indicators)
1+-1
1+-3
range(pmin(indiv_indicators$n_heavy_bleeding - 3, 0))
range( pmax(indiv_indicators$n_heavy_bleeding - 3, 0))
indiv_indicators$cycle_fertility =
indiv_indicators$mucus_quality +
- abs(3 - indiv_indicators$n_eggwhite )+
- indiv_indicators$n_bleeding_after_day_5 +
- pmax(indiv_indicators$n_heavy_bleeding - 3, 0)+
- abs(28.5 - indiv_indicators$cycle_length)+
- indiv_indicators$sd_cycle_length
hist(indiv_indicators$cycle_fertility)
hist(indiv_indicators$cycle_fertility, breaks = 100, xlim = c(-200,20))
hist(indiv_indicators$cycle_fertility, breaks = 100, xlim = c(-200,10))
hist(indiv_indicators$cycle_fertility, breaks = 100, xlim = c(-200,20))
hist(indiv_indicators$cycle_fertility, breaks = 1000, xlim = c(-200,20))
max(indiv_indicators$cycle_fertility, na.rm = TRUE)
indiv_indicators$cycle_fertility = indiv_indicators$cycle_fertility - max(indiv_indicators$cycle_fertility, na.rm = TRUE)
hist(indiv_indicators$cycle_fertility )
hist(indiv_indicators$cycle_fertility, breaks = 1000
)
hist(log(-indiv_indicators$cycle_fertility), breaks = 1000
)
hist(log(-indiv_indicators$cycle_fertility), breaks = 1000)
plot(indiv_indicators$mucus_quality, sigmoid(indiv_indicators$mucus_quality,2,1))
sigmoid = function(x, ix, s){ 1/(1+exp(-(x-ix)*s))}
plot(indiv_indicators$mucus_quality, sigmoid(indiv_indicators$mucus_quality,2,1))
plot(indiv_indicators$mucus_quality, sigmoid(indiv_indicators$mucus_quality,2,1))
dev.off()
plot(indiv_indicators$mucus_quality, sigmoid(indiv_indicators$mucus_quality,2,1))
plot(indiv_indicators$mucus_quality, sigmoid(indiv_indicators$mucus_quality,1.5,1))
plot(indiv_indicators$n_eggwhite,  - sigmoid(abs(3 - indiv_indicators$n_eggwhite ),3,1),)
plot(indiv_indicators$n_eggwhite,  - sigmoid(abs(3 - indiv_indicators$n_eggwhite ),3,1))
plot(indiv_indicators$n_eggwhite,  sigmoid(abs(3 - indiv_indicators$n_eggwhite ),3,1), xlim = c(0,100))
plot(indiv_indicators$n_eggwhite,  sigmoid(abs(indiv_indicators$n_eggwhite - 3 ),3,1), xlim = c(0,100))
plot(indiv_indicators$n_eggwhite,  sigmoid(abs(indiv_indicators$n_eggwhite - 3 ),3,1), xlim = c(0,100))
plot(indiv_indicators$n_eggwhite,  1-sigmoid(abs(indiv_indicators$n_eggwhite - 3 ),3,1), xlim = c(0,100))
plot(indiv_indicators$n_eggwhite,  1-sigmoid(abs(indiv_indicators$n_eggwhite - 3 ),5,1), xlim = c(0,100))
plot(indiv_indicators$n_bleeding_after_day_5,   1 - sigmoid(indiv_indicators$n_bleeding_after_day_5,0,0.5), xlim = c(0,100))
plot(indiv_indicators$n_bleeding_after_day_5,   1 - sigmoid(indiv_indicators$n_bleeding_after_day_5,1,0.5), xlim = c(0,100))
exp(0)
plot(indiv_indicators$n_bleeding_after_day_5,  1 - exp(indiv_indicators$n_bleeding_after_day_5) , xlim = c(0,100))
plot(indiv_indicators$n_bleeding_after_day_5,  exp(indiv_indicators$n_bleeding_after_day_5) , xlim = c(0,100))
plot(indiv_indicators$n_bleeding_after_day_5,  exp(-indiv_indicators$n_bleeding_after_day_5) , xlim = c(0,100))
plot(indiv_indicators$n_bleeding_after_day_5,  exp(-0.5*indiv_indicators$n_bleeding_after_day_5) , xlim = c(0,100))
plot(indiv_indicators$n_heavy_bleeding,  1 - sigmoid(indiv_indicators$n_heavy_bleeding,3,1) , xlim = c(0,20))
plot(indiv_indicators$n_heavy_bleeding,  1 - sigmoid(indiv_indicators$n_heavy_bleeding,5,1) , xlim = c(0,20))
plot(indiv_indicators$n_heavy_bleeding,  1 - sigmoid(indiv_indicators$n_heavy_bleeding,5,2) , xlim = c(0,20))
plot(1:20,  1 - sigmoid(1:20,5,2))
plot(1:20,  1 - sigmoid(1:20,5,1.5))
plot(1:20,  1 - sigmoid(1:20,5,1.5))
plot(1:100, 1 - sigmoid(abs(28.5 - 1:100),3,3))
plot(1:100, 1 - sigmoid(abs(28.5 - 1:100),1,3))
plot(1:100, 1 - sigmoid(abs(28.5 - 1:100),1,1))
plot(1:100, 1 - sigmoid(abs(28.5 - 1:100),1,0.5))
plot(1:100, 1 - sigmoid(abs(28.5 - 1:100),0,0.5))
plot(1:100, 1 - sigmoid(abs(28.5 - 1:100),0,0.5), type = "l")
plot(1:100, 1 - sigmoid(abs(28.5 - 1:100),0,0.5), type = "b")
plot(1:100, 1 - sigmoid(abs(28.5 - 1:100),-1,0.5), type = "b")
plot(1:100, 1 - sigmoid(abs(28.5 - 1:100),-10,0.5), type = "b")
plot(1:100, 1 - sigmoid(abs(28.5 - 1:100),10,0.5), type = "b")
plot(1:100, 1 - sigmoid(abs(28.5 - 1:100),10,1), type = "b")
plot(1:100, 1 - sigmoid(abs(28.5 - 1:100),2,1), type = "b")
plot(1:100, 1 - sigmoid(abs(28.5 - 1:100),2,1), type = "b")
plot(1:100, 1 - sigmoid(abs(28.5 - 1:100),2,1), type = "b")
plot(1:100, 1 - sigmoid(abs(28.5 - 1:100),3,1), type = "b")
plot(1:100, 1 - sigmoid(abs(28.5 - 1:100),3,2), type = "b")
plot(1:100, 1 - sigmoid(abs(28.5 - 1:100),3,1), type = "b")
plot(1:100, 1 - sigmoid(abs(28.5 - 1:100),4,1), type = "b")
hist(indiv_indicators$sd_cycle_length)
hist(indiv_indicators$sd_cycle_length, breaks = 1000)
hist(indiv_indicators$sd_cycle_length, breaks = 1000, xlim = c(0,100))
hist(indiv_indicators$sd_cycle_length, breaks = 1000, xlim = c(0,50))
plot(1:100, sigmoid(-1:100, 6,0.5))
plot(1:100, sigmoid(- (1:100), 6,0.5))
plot(1:100, sigmoid(- (1:100), 6,1))
plot(1:100, 1-sigmoid(1:100, 6,1))
plot(1:100, 1-sigmoid(1:100, 6,2))
plot(1:100, 1-sigmoid(1:100, 6,0.5))
plot(1:100, 1-sigmoid(1:100, 10,0.5))
indiv_indicators$cycle_fertility = 1/6*(
sigmoid(indiv_indicators$mucus_quality,1.5,1) +
1-sigmoid(abs(indiv_indicators$n_eggwhite - 3 ),3,1)+
exp(-0.25*indiv_indicators$n_bleeding_after_day_5) +
1 - sigmoid(indiv_indicators$n_heavy_bleeding,5,1.5)+
1 - sigmoid(abs(28.5 - indiv_indicators$cycle_length),4,1)+
1 - sigmoid(indiv_indicators$sd_cycle_length, 10,0.5)
)
range(indiv_indicators$cycle_fertility)
range(indiv_indicators$cycle_fertility, na.rm = TRUE)
hist(indiv_indicators$cycle_fertility)
indiv_indicators$age = users$age[match(indiv_indicators$user_id, users$user_id)]
plot(1:50,1 - sigmoid(abs(25 - 1:50),4,1))
plot(1:50,1 - sigmoid(abs(25 - 1:50),4,0.1))
plot(1:50,1 - sigmoid(abs(25 - 1:50),10,0.1))
plot(1:50,1 - sigmoid(abs(25 - 1:50),100,0.1))
plot(1:50,1 - sigmoid(abs(25 - 1:50),100,0.5))
plot(1:50,1 - sigmoid(abs(25 - 1:50),10,0.1))
plot(1:50,1 - sigmoid(abs(25 - 1:50),10,0.5))
plot(1:50,1 - sigmoid(abs(30 - 1:50),10,0.5))
plot(1:50,1 - sigmoid(abs(30 - 1:50),20,0.5))
plot(1:50,1 - sigmoid(abs(30 - 1:50),10,0.5))
plot(1:50,1 - sigmoid(abs(30 - 1:50),15,0.5))
plot(1:50,1 - sigmoid(abs(30 - 1:50),10,0.25))
plot(1:50,1 - sigmoid(abs(30 - 1:50),15,0.25))
plot(1:50,1 - sigmoid(abs(30 - 1:50),20,0.25))
plot(1:50,1 - sigmoid(abs(30 - 1:50),30,0.3))
plot(1:50,1 - sigmoid(abs(30 - 1:50),15,0.3))
indiv_indicators$bmi = users$bmi[match(indiv_indicators$user_id, users$user_id)]
m = match(indiv_indicators$user_id, users$user_id)
indiv_indicators$country = users$country[m]
indiv_indicators$age_cat = users$age_cat[m]
indiv_indicators$age = users$age[m]
indiv_indicators$bmi_cat = users$bmi_cat[m]
indiv_indicators$bmi = users$bmi[m]
plot(1:50,1 - sigmoid(abs(25 - 1:50),15,0.3))
plot(1:50,1 - sigmoid(abs(25 - 1:50),15,0.5))
plot(1:50,1 - sigmoid(abs(25 - 1:50),10,0.5))
plot(1:50,1 - sigmoid(abs(25 - 1:50),10,1))
plot(1:50,1 - sigmoid(abs(25 - 1:50),5,0.5))
plot(1:50,1 - sigmoid(abs(25 - 1:50),5,1))
plot(1:50,1 - sigmoid(abs(25 - 1:50),5,2))
plot(1:50,1 - 0.5*sigmoid(abs(25 - 1:50),5,2))
plot(1:50,1 - 0.5*sigmoid(abs(25 - 1:50),5,1))
plot(1:50,1 - 0.5*sigmoid(abs(25 - 1:50),10,1))
plot(1:50,1 - 0.5*sigmoid(abs(25 - 1:50),6,1))
indiv_indicators$overall_fertility = 1/2*(
1 - sigmoid(abs(30 - indiv_indicators$age),15,0.3)+
1 - 0.5*sigmoid(abs(25 - indiv_indicators$bmi),6,1)
)
indiv_indicators$fertility  = indiv_indicators$daily_fertility *
indiv_indicators$cycle_fertility * indiv_indicators$overall_fertility
save(indiv_indicators, file = paste0(IO$output_clue, "indiv_indicators.Rdata"  ))
file.copy(from = paste0(IO$output_clue, "indiv_indicators.Rdata"  ),
to = paste0(IO$tmp_clue, "indiv_indicators_with_overall_fertility.Rdata"  ))
ggplot(indiv_indicators[indiv_indicators$user_id %in% unique(indiv_indicators$user_id)[1:10],],
aes(x = date, y = fertility, col = user_id)) +
geom_line() + guides(col = FALSE)+
facet_grid(user_id ~ . )
colnames(indiv_indicators)
save(indiv_indicators, file = paste0(IO$output_clue, "indiv_indicators.Rdata"  ))
file.copy(from = paste0(IO$output_clue, "indiv_indicators.Rdata"  ),
to = paste0(IO$tmp_clue, "indiv_indicators_with_fertility.Rdata"  ))
indiv_indicators$fertility[is.na(indiv_indicators$fertility)] = 0
save(indiv_indicators, file = paste0(IO$output_clue, "indiv_indicators.Rdata"  ))
file.copy(from = paste0(IO$output_clue, "indiv_indicators.Rdata"  ),
to = paste0(IO$tmp_clue, "indiv_indicators_with_overall_fertility.Rdata"  ))
save(indiv_indicators, file = paste0(IO$output_clue, "indiv_indicators.Rdata"  ))
file.copy(from = paste0(IO$output_clue, "indiv_indicators.Rdata"  ),
to = paste0(IO$tmp_clue, "indiv_indicators_with_overall_fertility.Rdata"  ), overwrite = TRUE)
load(paste0(IO$output_clue,"indiv_indicators.Rdata"))
load(paste0(IO$output_clue,"indiv_indicators.Rdata"), verbose = TRUE)
colnames(indiv_indicators)
unique(indiv_indicators$fertility)
sort(unique(indiv_indicators.Rdata))
sort(unique(indiv_indicators$fertility))
which(is.na(indiv_indicators$fertility))
user
this_user_indiv_indicators = indiv_indicators[indiv_indicators$user_id == user,]
this_user_indiv_indicators = this_user_indiv_indicators[order(this_user_indiv_indicators$time_num),]
timeserie_matrix = as.matrix(this_user_indiv_indicators[,c("time_num","daily_fertility")])
current.wt = wt(timeserie_matrix,
dt = par$dt, dj = 15*par$dt,
lag1 = 0.7, # pink noise
sig.test = 1) # we want to run a significance test
plot(current.wt, main = paste0(user," - daily_fertility"))
timeserie_matrix = as.matrix(this_user_indiv_indicators[,c("time_num","fertility")])
current.wt = wt(timeserie_matrix,
dt = par$dt, dj = 15*par$dt,
lag1 = 0.7, # pink noise
sig.test = 1) # we want to run a significance test
plot(current.wt, main = paste0(user," - fertility"))
for(user in unique(indiv_indicators$user_id)[1:20]){
this_user_indiv_indicators = indiv_indicators[indiv_indicators$user_id == user,]
this_user_indiv_indicators = this_user_indiv_indicators[order(this_user_indiv_indicators$time_num),]
timeserie_matrix = as.matrix(this_user_indiv_indicators[,c("time_num","daily_fertility")])
current.wt = wt(timeserie_matrix,
dt = par$dt, dj = 15*par$dt,
lag1 = 0.7, # pink noise
sig.test = 1) # we want to run a significance test
plot(current.wt, main = paste0(user," - daily_fertility"))
timeserie_matrix = as.matrix(this_user_indiv_indicators[,c("time_num","fertility")])
current.wt = wt(timeserie_matrix,
dt = par$dt, dj = 15*par$dt,
lag1 = 0.7, # pink noise
sig.test = 1) # we want to run a significance test
plot(current.wt, main = paste0(user," - fertility"))
}
user
unique(indiv_indicators$user_id)[1:20]
this_user_indiv_indicators = indiv_indicators[indiv_indicators$user_id == user,]
this_user_indiv_indicators = this_user_indiv_indicators[order(this_user_indiv_indicators$time_num),]
timeserie_matrix = as.matrix(this_user_indiv_indicators[,c("time_num","daily_fertility")])
current.wt = wt(timeserie_matrix,
dt = par$dt, dj = 15*par$dt,
lag1 = 0.7, # pink noise
sig.test = 1) # we want to run a significance test
plot(current.wt, main = paste0(user," - daily_fertility"))
head(timeserie_matrix)
summary(timeserie_matrix)
timeserie_matrix = as.matrix(this_user_indiv_indicators[,c("time_num","fertility")])
summary(timeserie_matrix)
head(this_user_indiv_indicators)
all(this_user_indiv_indicators$fertility == 0)
