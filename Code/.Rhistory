beta_C = opt_par_df %>% ungroup() %>%  filter(model == "C", country_area == location, BC == "all", age_cat == "all", sex_type == "unprot_sex") %>% select(beta) %>% unlist()
this_cat_monthly_sex = this_cat_predicted_sex %>%
mutate(
sex_A = sex,
beta_A = max(sex_A - 1),
beta_C = beta_C,
sex_C = 1 + beta_C * (sex_A - 1)/beta_A,
year = year(date)) %>%
group_by(month, year, beta_A, beta_C) %>%
summarize(sex_A = sum(sex_A),
sex_C = sum(sex_C),
n = n(),
sex_A = sex_A/n*30,
sex_C = sex_C/n*30,
.groups = "drop") %>%
filter(n > 20) %>%
arrange(year, month) %>%
mutate(beta_eff_A = (max(sex_A)-mean(sex_A))/mean(sex_A),
beta_eff_C = (max(sex_C)-mean(sex_C))/mean(sex_C),
country_area = location
)
betas = this_cat_monthly_sex %>%
select(country_area, beta_A, beta_C, beta_eff_A, beta_eff_C) %>%
distinct() %>%
pivot_longer(cols = starts_with("beta"), names_to = c(".value","model"), names_pattern =  "(.*)_([AC])")
betas
})
opt_par_df %>% ungroup() %>%  filter(BC == "all", age_cat == "all", sex_type == "unprot_sex") %>%
select(country_area, model, alpha) %>%
left_join(., beta_eff, by = c("country_area", "model")) %>%
mutate(beta = beta %>% replace_na(0),
beta_eff = beta_eff %>% replace_na(0))
opt_par_df = opt_par_df %>%
mutate(country_area_col = dict$country_area$country_area_col[match(country_area, dict$country_area$country_area)])
opt_par_df = opt_par_df %>%
mutate(country_area_wrapped =
country_area %>%
str_replace(.," - ","\n") %>%
factor(., levels = dict$country_area$country_area  %>% str_replace(.," - ","\n")))
births = read_feather(path = str_c(IO$out_Rdata, "simulated_births.feather"))
opt_par_df = opt_par_df %>% mutate(sex_type_short = sex_type %>% str_remove(.,"_sex"))
# first we need to get the number of data point for each time-series
n_tp = births %>%
group_by(country_area, age_cat, BC, sex_type, model) %>%
summarize(n = n(),
sigmasq = var(births), #residuals
.groups = "drop")
opt_par_df = full_join(opt_par_df, n_tp, by = c("country_area", "BC","age_cat", "sex_type", "model"))
opt_par_df = opt_par_df %>%
mutate(n_par = case_when(
model == "A" ~ 0,
model == "B" ~ 2,
model == "C" ~ 3),
lL = n * log(1/sqrt(2*pi*sigmasq)) - 1/(2*sigmasq)*SSR,
AIC = 2*n_par - 2*lL
)
AIC_table = opt_par_df %>%
select(country_area, sex_type, BC, age_cat, model, AIC) %>%
arrange(country_area, sex_type, BC, age_cat, model) %>%
mutate(AIC = round(AIC, 1)) %>%
pivot_wider(id_cols = c(country_area, BC, age_cat),
values_from = AIC,
names_from = c("sex_type","model"))
colnames(AIC_table) = colnames(AIC_table) %>%
str_remove("all_sex_") %>% str_remove("unprot_sex_") %>% str_remove("prot_sex_")
best_models = opt_par_df %>%
arrange(country_area, BC, age_cat, sex_type, AIC) %>%
group_by(country_area, BC, age_cat, sex_type) %>%
top_n(n = 1, wt = desc(AIC)) %>%
rename(best_model = model) %>%
ungroup()
best_models_table = best_models %>%
select(country_area, BC, age_cat , sex_type, best_model) %>%
pivot_wider(names_from = c("BC", "sex_type"), values_from = "best_model", names_prefix = "BC: ", names_sep = " - ")
colnames(best_models_table) = colnames(best_models_table) %>%
str_remove("BC: all") %>% str_remove("BC: F") %>% str_remove("BC: I") %>%
str_remove(" - ")
head(births)
ca = "France"
ggplot(births %>% filter(model == "C", country_area == ca),
aes(x = year_month)) +
geom_line(data = births %>%
filter(model == "C", country_area == ca, BC = "all", age_cat = "all", sex_type = "all_sex"),
aes(y = births)) +
geom_line(aes(y = sim_births, col = sex_type)) +
facet_grid(BC + age_cat ~ .)
ca = "France"
ggplot(births %>% filter(model == "C", country_area == ca),
aes(x = year_month)) +
geom_line(data = births %>%
filter(model == "C", country_area == ca, BC == "all", age_cat == "all", sex_type == "all_sex"),
aes(y = births)) +
geom_line(aes(y = sim_births, col = sex_type)) +
facet_grid(BC + age_cat ~ .)
ca = "Brazil - Central-West"
ggplot(births %>% filter(model == "C", country_area == ca),
aes(x = year_month)) +
geom_line(data = births %>%
filter(model == "C", country_area == ca, BC == "all", age_cat == "all", sex_type == "all_sex"),
aes(y = births)) +
geom_line(aes(y = sim_births, col = sex_type)) +
facet_grid(BC + age_cat ~ .)
ca = "Brazil - Central-West"
ggplot(births %>% filter(model == "C", country_area == ca),
aes(x = year_month)) +
geom_line(aes(y = births)) +
geom_line(aes(y = sim_births, col = sex_type)) +
facet_grid(BC + age_cat ~ .)
ca = "Brazil - Central-West"
ggplot(births %>% filter(model == "C", country_area == ca),
aes(x = year_month)) +
geom_line(aes(y = births)) +
geom_line(aes(y = sim_births, col = sex_type)) +
facet_grid(age_cat ~ .)
ca = "Brazil - Central-West"
ggplot(births %>% filter(model == "C", country_area == ca),
aes(x = year_month)) +
geom_line(aes(y = births)) +
geom_line(aes(y = sim_births, col = sex_type, group = interaction(BC, sex_type))) +
facet_grid(age_cat ~ .)
ca = "Brazil - Central-West"
ggplot(births %>% filter(model == "C", country_area == ca),
aes(x = year_month)) +
geom_line(aes(y = births)) +
geom_line(aes(y = sim_births, col = age_cat, linetype = BC)) +
facet_grid(sex_type ~ .)
ca = "Brazil - Central-West"
ggplot(births %>% filter(model == "C", country_area == ca),
aes(x = year_month)) +
geom_line(aes(y = births)) +
geom_line(aes(y = sim_births, col = age_cat, linetype = BC)) +
facet_grid(sex_type ~ .) +
xlab("time (year)") +
theme(strip.background.y = element_rect(fill = "gray90", col = "transparent"))
ca = "Brazil - Central-West"
ggplot(births %>% filter(model == "C", country_area == ca),
aes(x = year_month)) +
geom_line(aes(y = births)) +
geom_line(aes(y = sim_births, col = age_cat, linetype = BC)) +
facet_grid(sex_type ~ .) +
xlab("time (year)") +
theme(strip.background.y = element_rect(fill = "gray90", color = "transparent"))
ca = "Brazil - Central-West"
ggplot(births %>% filter(model == "C", country_area == ca),
aes(x = year_month)) +
geom_line(aes(y = births)) +
geom_line(aes(y = sim_births, col = age_cat, linetype = BC)) +
facet_grid(sex_type ~ .) +
xlab("time (year)") +
theme(strip.background.y = element_rect(fill = "gray90", color = "transparent")) +
ggtitle(ca)
ca = "Brazil - Northeast"
ggplot(births %>% filter(model == "C", country_area == ca),
aes(x = year_month)) +
geom_line(aes(y = births)) +
geom_line(aes(y = sim_births, col = age_cat, linetype = BC)) +
facet_grid(sex_type ~ .) +
xlab("time (year)") +
theme(strip.background.y = element_rect(fill = "gray90", color = "transparent")) +
ggtitle(ca)
ggplot(births %>% filter(model == "C", country_area == ca),
aes(x = year_month)) +
geom_line(aes(y = births)) +
geom_line(aes(y = sim_births, col = sex_type, linetype = BC)) +
facet_grid(age_cat ~ .) +
xlab("time (year)") +
theme(strip.background.y = element_rect(fill = "gray90", color = "transparent")) +
ggtitle(ca)
ggplot(births %>% filter(model == "C", country_area == ca),
aes(x = year_month)) +
geom_line(aes(y = births)) +
geom_line(aes(y = sim_births, col = sex_type, linetype = BC)) +
facet_grid(age_cat ~ ., labeller = label_both) +
xlab("time (year)") +
theme(strip.background.y = element_rect(fill = "gray90", color = "transparent")) +
ggtitle(ca)
ggplot(births %>% filter(model == "C", country_area == ca, sex_type != "all_sex"),
aes(x = year_month)) +
geom_line(aes(y = births)) +
geom_line(aes(y = sim_births, col = age_cat, linetype = BC)) +
facet_grid(sex_type ~ .) +
xlab("time (year)") +
theme(strip.background.y = element_rect(fill = "gray90", color = "transparent")) +
ggtitle(ca)
ggplot(births %>% filter(model == "C", country_area == ca, sex_type != "all_sex"),
aes(x = year_month)) +
geom_line(aes(y = births)) +
geom_line(aes(y = sim_births, col = sex_type, linetype = BC)) +
facet_grid(age_cat ~ ., labeller = label_both) +
xlab("time (year)") +
theme(strip.background.y = element_rect(fill = "gray90", color = "transparent")) +
ggtitle(ca)
ca = "United States - California"
ggplot(births %>% filter(model == "C", country_area == ca, sex_type != "all_sex"),
aes(x = year_month)) +
geom_line(aes(y = births)) +
geom_line(aes(y = sim_births, col = age_cat, linetype = BC)) +
facet_grid(sex_type ~ .) +
xlab("time (year)") +
theme(strip.background.y = element_rect(fill = "gray90", color = "transparent")) +
ggtitle(ca)
ggplot(births %>% filter(model == "C", country_area == ca, sex_type != "all_sex"),
aes(x = year_month)) +
geom_line(aes(y = births)) +
geom_line(aes(y = sim_births, col = sex_type, linetype = BC)) +
facet_grid(age_cat ~ ., labeller = label_both) +
xlab("time (year)") +
theme(strip.background.y = element_rect(fill = "gray90", color = "transparent")) +
ggtitle(ca)
ca = "United States - Northeast"
ggplot(births %>% filter(model == "C", country_area == ca, sex_type != "all_sex"),
aes(x = year_month)) +
geom_line(aes(y = births)) +
geom_line(aes(y = sim_births, col = age_cat, linetype = BC)) +
facet_grid(sex_type ~ .) +
xlab("time (year)") +
theme(strip.background.y = element_rect(fill = "gray90", color = "transparent")) +
ggtitle(ca)
ggplot(births %>% filter(model == "C", country_area == ca, sex_type != "all_sex"),
aes(x = year_month)) +
geom_line(aes(y = births)) +
geom_line(aes(y = sim_births, col = sex_type, linetype = BC)) +
facet_grid(age_cat ~ ., labeller = label_both) +
xlab("time (year)") +
theme(strip.background.y = element_rect(fill = "gray90", color = "transparent")) +
ggtitle(ca)
for(ca in unique(births$country_area)){
# ggplot(births %>% filter(model == "C", country_area == ca, sex_type != "all_sex"),
#        aes(x = year_month)) +
#   geom_line(aes(y = births)) +
#   geom_line(aes(y = sim_births, col = age_cat, linetype = BC)) +
#   facet_grid(sex_type ~ .) +
#   xlab("time (year)") +
#   theme(strip.background.y = element_rect(fill = "gray90", color = "transparent")) +
#   ggtitle(ca)
g = ggplot(births %>% filter(model == "C", country_area == ca, sex_type != "all_sex"),
aes(x = year_month)) +
geom_line(aes(y = births)) +
geom_line(aes(y = sim_births, col = sex_type, linetype = BC)) +
facet_grid(age_cat ~ ., labeller = label_both) +
xlab("time (year)") +
theme(strip.background.y = element_rect(fill = "gray90", color = "transparent")) +
ggtitle(ca)
print(g)
}
for(ca in unique(births$country_area)){
# ggplot(births %>% filter(model == "C", country_area == ca, sex_type != "all_sex"),
#        aes(x = year_month)) +
#   geom_line(aes(y = births)) +
#   geom_line(aes(y = sim_births, col = age_cat, linetype = BC)) +
#   facet_grid(sex_type ~ .) +
#   xlab("time (year)") +
#   theme(strip.background.y = element_rect(fill = "gray90", color = "transparent")) +
#   ggtitle(ca)
g = ggplot(births %>% filter(model == "C", country_area == ca, sex_type != "all_sex"),
aes(x = year_month)) +
geom_line(aes(y = births)) +
geom_line(aes(y = sim_births, col = sex_type, linetype = BC)) +
facet_grid(age_cat ~ ., labeller = label_both) +
xlab("time (year)") +
theme(strip.background.y = element_rect(fill = "gray90", color = "transparent")) +
ggtitle(ca)
print(g)
}
births
ggplot(births %>% filter(model == "C", country_area == ca),
aes(x = year_month - floor(year_month))) +
geom_line(aes(y = births)) +
geom_line(aes(y = sim_births, col = sex_type, linetype = BC)) +
facet_grid(floor(year_month) ~ age_cat, labeller = label_both) +
xlab("time (year)") +
theme(strip.background.y = element_rect(fill = "gray90", color = "transparent"),
legend.position = "bottom") +
ggtitle(ca)
?labeller
?facet_grid
?label_both
ggplot(births %>% filter(model == "C", country_area == ca),
aes(x = year_month - floor(year_month))) +
geom_line(aes(y = births)) +
geom_line(aes(y = sim_births, col = sex_type, linetype = BC)) +
facet_grid(floor(year_month) ~ age_cat, labeller = label_both) +
xlab("time (year)") +
theme(strip.background.y = element_rect(fill = "gray90", color = "transparent"),
legend.position = "right") +
ggtitle(ca)
ggplot(births %>% filter(model == "C", country_area == ca),
aes(x = year_month - floor(year_month))) +
geom_line(aes(y = births)) +
geom_line(aes(y = sim_births, col = sex_type)) +
facet_grid(floor(year_month) ~ age_cat + BC, labeller = label_context) +
xlab("time (year)") +
theme(strip.background.y = element_rect(fill = "gray90", color = "transparent"),
legend.position = "right") +
ggtitle(ca)
source("Scripts/00_setup.R")
IO$birth_records_dir = "../Data/1_births_raw/"
IO$panels = "../Figures Tables Media/Figures/panels/"
source("../../Seasonality-Restricted-Access-Repo/Scripts/00_variables_restricted_IO.R") # sets IO$r_data
# Clue data
IO$clue_data = paste0(IO$r_Data,"Clue_US_BR_EU/")
IO$input_clue = paste0(IO$clue_data,"input/")
IO$output_clue = paste0(IO$clue_data,"output/")
if(!dir.exists(IO$output_clue)){dir.create(IO$output_clue)}
IO$tmp_clue = paste0(IO$clue_data, "tmp/")
if(!dir.exists(IO$tmp_clue)){dir.create(IO$tmp_clue)}
source("Scripts/00_setup.R")
columns_from_each_source = c("source","country","area","lat","lon","year","month","month_num","date","births")
months = levels(month(1:12, label = TRUE, abbr = FALSE))
IO$birth_records_dir
BR_birth = read_csv(file = str_c(IO$birth_records_dir,"Brazil_monthly_births_by_states_2000_2017.csv"),
col_types = cols(
year = col_double(),
location = col_character(),
month = col_character(),
month.number = col_double(),
births = col_double(),
location.type = col_character()
)
)
brazil.dict.list = list(
"North" = c("Acre", "Amapá", "Amazonas", "Pará", "Rondônia", "Roraima", "Tocantins"),
"Northeast" = c("Alagoas", "Bahia", "Ceará", "Maranhão", "Paraíba", "Pernambuco", "Piauí", "Rio Grande do Norte", "Sergipe"),
"Central-West" = c("Goiás", "Mato Grosso", "Mato Grosso do Sul", "Distrito Federal" ),
"Southeast" = c("Espírito Santo", "Minas Gerais", "Rio de Janeiro", "São Paulo"),
"South" = c("Paraná", "Rio Grande do Sul", "Santa Catarina")
)
brazil.dict = data.frame(region = rep(names(brazil.dict.list), lengths(brazil.dict.list)),
states = unlist(brazil.dict.list),
stringsAsFactors = FALSE)
brazil.dict.geo = rbind(
data.frame(region = "North", lat = -3.129167, lon = -60.021389),
data.frame(region = "Northeast", lat = -12.966667, lon = -38.516667),
data.frame(region = "Central-West", lat = -15.779722, lon = -47.930556 ),
data.frame(region = "Southeast", lat = -23.55, lon = -46.633333 ),
data.frame(region = "South", lat = -25.433333, lon = -49.266667)
)
BR_birth = BR_birth %>%  mutate(
source = "svs.aids.gov.br",
country = "Brazil",
state = location,
area = brazil.dict$region[match(location,brazil.dict$states)],
month_num = month.number,
month_short = month,
month = months[month_num],
date = as.Date(str_c(year,"-",month_num,"-01")),
lat = brazil.dict.geo$lat[match(area, brazil.dict.geo$region)],
lon = brazil.dict.geo$lon[match(area, brazil.dict.geo$region)]
)  %>%  dplyr::select(all_of(columns_from_each_source), state)
save(BR_birth, file = paste0(IO$out_Rdata,"BR_birth_data_by_states.Rdata"))
# aggregate by area
BR_birth = BR_birth %>%
group_by(source, country, area, lat, lon, year, month, month_num, date) %>%
dplyr::summarize(births = sum(births), .groups = "drop")%>%
dplyr::select(all_of(columns_from_each_source))
save(BR_birth, file = paste0(IO$out_Rdata,"BR_birth_data.Rdata"))
US_birth = read_tsv(file = str_c(IO$birth_records_dir,"US_monthly_births_2007_2018.txt"),
col_types = cols(
notes = col_skip(),
state = col_character(),
state_code = col_skip(),
year = col_integer(),
year_code = col_skip(),
month = col_character(),
month_num = col_integer(),
births = col_integer()
))
US.dict.list = list(
"Northeast" = c("Connecticut", "Maine", "Massachusetts", "New Hampshire", "Rhode Island", "Vermont",
"New Jersey", "New York","Pennsylvania"),
"Midwest" = c("Indiana","Illinois","Michigan","Ohio","Wisconsin",
"Iowa","Kansas","Minnesota","Missouri","Nebraska","North Dakota","South Dakota"),
"South" = c("Delaware", "District of Columbia", "Florida", "Georgia", "Maryland",
"North Carolina", "South Carolina", "Virginia", "West Virginia",
"Alabama","Kentucky","Mississippi","Tennessee",
"Arkansas","Louisiana","Oklahoma","Texas"),
"West - without California" = c("Arizona","Colorado","Idaho","New Mexico",
"Montana","Utah","Nevada","Wyoming",
"Alaska","Hawaii","Oregon","Washington"),
"California" = c("California")
)
US.dict = data.frame(region = rep(names(US.dict.list), lengths(US.dict.list)),
states = unlist(US.dict.list),
stringsAsFactors = FALSE)
US.dict.geo = rbind(
data.frame(region = "Northeast", lat = 42, lon = -73),
data.frame(region = "Midwest", lat = 42, lon = -90),
data.frame(region = "South", lat = 33, lon = -88 ),
data.frame(region = "West - without California", lat = 40, lon = -113 ),
data.frame(region = "California", lat = 37, lon = -120)
)
US_birth = US_birth %>%
mutate(source = "CDC",
country = "United States",
date = as.Date(str_c(year,"-",month_num,"-01")),
area = US.dict$region[match(state, US.dict$state)],
lat = US.dict.geo$lat[match(area, US.dict.geo$region)],
lon = US.dict.geo$lon[match(area, US.dict.geo$region)]) %>%
dplyr::select(all_of(columns_from_each_source), state)
save(US_birth, file = paste0(IO$out_Rdata,"US_birth_data_by_states.Rdata"))
# aggregate by area
US_birth = US_birth %>%
group_by(source, country, area, lat, lon, year, month, month_num, date) %>%
dplyr::summarize(births = sum(births)) %>%
dplyr::select(all_of(columns_from_each_source))
save(US_birth, file = paste0(IO$out_Rdata,"US_birth_data.Rdata"))
UK_birth = read_csv(file = str_c(IO$birth_records_dir,"UK_monthly_births_england_and_wales.csv"),
col_types = cols(
Year = col_double(),
Total = col_number(),
January = col_number(),
February = col_number(),
March = col_number(),
April = col_number(),
May = col_number(),
June = col_number(),
July = col_number(),
August = col_number(),
September = col_number(),
October = col_number(),
November = col_number(),
December = col_number()
))
UK_birth = UK_birth %>% select(-Total) %>% pivot_longer(cols = -Year, names_to = "Month",values_to = "births")
UK_birth = UK_birth %>% mutate(
source = "ons.gov.uk",
country = "United Kingdom",
area = "",
lat = 52,
lon = -1,
year = Year,
month = Month,
month_num =  match(Month,levels(month(1:12, label = TRUE, abbr = FALSE))),
date = as.Date(str_c(year,"-",month_num,"-01"))
) %>%  select(all_of(columns_from_each_source))
save(UK_birth, file = paste0(IO$out_Rdata,"UK_birth_data.Rdata"))
FR_birth = read_delim(file = str_c(IO$birth_records_dir,"France_birth_data.csv"), delim = ";",
col_types = cols(
month = col_character(),
births = col_double(),
code = col_character()
))
FR_birth = FR_birth %>%
rename(date_month_chr = month)%>%
mutate(
source = "INSEE",
country = "France",
area = "",
lat = 46.62012,
lon = 2.452757,
year = str_sub(date_month_chr, 1, 4) %>% as.numeric(),
month_num =  str_sub(date_month_chr, 6, 7) %>% as.numeric(),
month = months[month_num],
date = as.Date(str_c(year,"-",month_num,"-01"))
) %>%
select(all_of(columns_from_each_source)) %>%
arrange(year, month_num)
save(FR_birth, file = paste0(IO$out_Rdata,"FR_birth_data.Rdata"))
birth = bind_rows(
BR_birth,
US_birth,
UK_birth,
FR_birth
)
# add country_area + arrange country by latitude (North to South)
birth = birth %>%
ungroup() %>%
dplyr::mutate(country_area = str_c(country, ifelse(area == "","",str_c(" - ",area)))) %>%
arrange(desc(lat), country, year, month) %>%
dplyr::mutate(country = factor(country))
save(birth, file = paste0(IO$out_Rdata,"birth_data.Rdata"))
IO$out_Rdata
save(birth, file = "../Data/2_births_processed/birth_data.Rdata")
write_csv(birth, file = "../Data/2_births_processed/birth_data.csv")
birth = bind_rows(
BR_birth,
US_birth,
UK_birth,
FR_birth
)
# add country_area + arrange country by latitude (North to South)
birth = birth %>%
ungroup() %>%
dplyr::mutate(country_area = str_c(country, ifelse(area == "","",str_c(" - ",area)))) %>%
arrange(desc(lat), country, year, month_num) %>%
dplyr::mutate(country = factor(country))
save(birth, file = "../Data/2_births_processed/birth_data.Rdata")
write_csv(birth, file = "../Data/2_births_processed/birth_data.csv")
birth_summary = birth %>%
group_by(source, country, country_area) %>%
summarize(start_date = min(date),
end_date = max(date),
n = n()) %>%
arrange(country) %>%
as.data.frame()
kable(birth_summary, format = "pandoc", caption = "Summary of the official birth record dataset. 'n' is the number of data-point, i.e. of monthly birth record for each location.")
IO$out_Rdata
source("Scripts/00_setup.R")
IO$p_outputs
load(file = str_c(IO$p_outputs,"sex_models_df.Rdata"), verbose = TRUE)
IO$out_Rdata
out_Rdata
IO$out_Rdata
IO$out_Rdata <- "../Data/5_outputs/"
births_STL = read_feather(path = str_c(IO$out_Rdata, "simulated_births_seasonal_trends.feather"))
opt_par_df = read_feather(path = str_c(IO$out_Rdata, "optimal_parameters_and_AIC.feather"))
births_STL
opt_par_df
births = read_feather(path = str_c(IO$out_Rdata, "simulated_births.feather"))
births
opt_par_df = read_feather(path = str_c(IO$out_Rdata, "optimal_parameters_and_AIC.feather"))
opt_par_df
